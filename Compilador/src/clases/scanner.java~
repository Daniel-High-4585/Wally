/* The following code was generated by JFlex 1.4.3 on 10/3/19 5:41 PM */

package clases;

import static clases.Tokens.*;
import java_cup.runtime.;
import java.util.LinkedList;


/**
 * This class is a scanner generated by 
 * <a href="http://www.jflex.de/">JFlex</a> 1.4.3
 * on 10/3/19 5:41 PM from the specification file
 * <tt>/home/oliveros/Documents/T/9/Automatas/compilador/Lenguaje_Automatas_II/Compilador/src/clases/Lexer.flex</tt>
 */
public class scanner implements java_cup.runtime.Scanner {

  /** This character denotes the end of file */
  public static final int YYEOF = -1;

  /** initial size of the lookahead buffer */
  private static final int ZZ_BUFFERSIZE = 16384;

  /** lexical states */
  public static final int YYINITIAL = 0;

  /**
   * ZZ_LEXSTATE[l] is the state in the DFA for the lexical state l
   * ZZ_LEXSTATE[l+1] is the state in the DFA for the lexical state l
   *                  at the beginning of a line
   * l is of the form l = 2*k, k a non negative integer
   */
  private static final int ZZ_LEXSTATE[] = { 
     0, 0
  };

  /** 
   * Translates characters to character classes
   */
  private static final String ZZ_CMAP_PACKED = 
    "\11\0\1\3\1\3\2\0\1\3\22\0\1\4\1\0\1\5\5\0"+
    "\1\17\1\20\1\13\1\11\1\6\1\12\1\7\1\14\12\2\1\101"+
    "\1\21\1\0\1\10\3\0\1\22\1\34\1\42\1\37\1\25\1\43"+
    "\1\23\1\44\1\27\1\50\1\45\1\31\1\35\1\36\1\32\1\40"+
    "\1\47\1\24\1\33\1\26\1\30\1\41\3\1\1\46\4\0\1\102"+
    "\1\0\1\52\1\64\1\72\1\67\1\55\1\73\1\53\1\74\1\57"+
    "\1\100\1\75\1\61\1\65\1\66\1\62\1\70\1\77\1\54\1\63"+
    "\1\56\1\60\1\71\3\51\1\76\1\15\1\0\1\16\uff82\0";

  /** 
   * Translates characters to character classes
   */
  private static final char [] ZZ_CMAP = zzUnpackCMap(ZZ_CMAP_PACKED);

  /** 
   * Translates DFA states to action switch labels.
   */
  private static final int [] ZZ_ACTION = zzUnpackAction();

  private static final String ZZ_ACTION_PACKED_0 =
    "\1\1\2\2\1\3\2\1\1\2\1\4\1\5\1\6"+
    "\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16"+
    "\1\17\14\2\15\20\1\21\3\0\1\22\1\0\1\21"+
    "\2\0\2\21\1\0\1\21\1\0\1\21\3\0\3\21"+
    "\1\0\1\21\2\0\2\21\1\0\1\21\4\0\4\21"+
    "\1\0\1\21\2\23\1\0\1\21\2\20\1\0\42\20"+
    "\2\23\2\20\1\3\1\22\1\0\1\21\2\0\2\21"+
    "\1\0\1\21\2\0\2\21\2\0\2\21\1\0\1\21"+
    "\3\0\3\21\1\0\1\21\1\0\1\21\1\20\1\24"+
    "\14\20\1\23\36\20\1\0\1\21\2\0\2\21\1\0"+
    "\1\21\2\0\2\21\2\0\2\21\1\0\1\21\2\0"+
    "\2\21\1\0\1\21\1\0\1\21\1\0\2\20\1\0"+
    "\3\20\1\0\2\20\1\0\4\20\1\0\3\20\1\0"+
    "\2\20\1\0\4\20\1\0\2\20\1\0\4\20\1\0"+
    "\3\20\1\0\2\20\1\0\4\20\1\0\3\20\1\0"+
    "\1\20\1\0\1\21\1\0\1\21\2\0\2\21\2\0"+
    "\2\21\1\0\1\21\1\0\1\21\1\0\1\21\1\0"+
    "\1\21\2\20\1\0\1\20\1\23\2\20\1\0\3\20"+
    "\1\0\2\20\1\0\4\20\1\0\2\20\1\0\4\20"+
    "\1\0\3\20\2\0\3\20\1\0\3\20\1\0\1\20"+
    "\1\0\1\21\1\0\1\21\2\0\2\21\1\0\1\21"+
    "\1\0\1\21\1\0\1\21\1\0\1\21\2\20\1\0"+
    "\3\20\1\0\3\20\1\0\2\20\1\0\4\20\1\0"+
    "\3\20\1\0\3\20\1\0\2\20\1\0\2\20\1\0"+
    "\1\20\1\0\1\21\1\0\1\21\1\0\1\21\1\0"+
    "\1\21\1\0\1\21\1\0\1\21\2\20\1\0\3\20"+
    "\1\0\3\20\1\0\1\20\1\0\3\20\1\0\3\20"+
    "\1\0\3\20\1\0\1\20\7\0\7\21\1\0\1\21"+
    "\16\20\10\0\7\20\1\0\2\20\1\0\1\20\5\0"+
    "\5\21\1\0\1\21\15\20\10\0\7\20\1\0\1\20"+
    "\5\0\5\21\3\20\3\0\2\20\1\0\2\20\1\0"+
    "\2\20\3\0\2\20\1\0\5\20\3\0\3\21\2\0"+
    "\2\20\1\0\2\20\1\0\2\20\1\0\3\20\2\0"+
    "\2\21\2\20\1\0\2\20\1\0\2\20\1\0\1\21"+
    "\2\20\1\0\1\20\1\0\1\21\2\20\1\0\1\20"+
    "\1\0\1\21\2\20\1\0\1\20\1\0\1\21\2\20"+
    "\1\0\1\20\1\0\1\21\2\20\1\0\1\20\1\0"+
    "\1\21\2\20\1\0\1\20\1\0\1\21\2\20\1\0"+
    "\1\20\1\0\1\21\2\20\1\0\1\20\1\0\1\21"+
    "\2\20\1\0\1\20\1\0\1\21\2\20\1\0\1\20";

  private static int [] zzUnpackAction() {
    int [] result = new int[651];
    int offset = 0;
    offset = zzUnpackAction(ZZ_ACTION_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAction(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /** 
   * Translates a state to a row index in the transition table
   */
  private static final int [] ZZ_ROWMAP = zzUnpackRowMap();

  private static final String ZZ_ROWMAP_PACKED_0 =
    "\0\0\0\103\0\206\0\311\0\u010c\0\u014f\0\u0192\0\103"+
    "\0\103\0\103\0\103\0\103\0\103\0\103\0\103\0\103"+
    "\0\103\0\103\0\103\0\u01d5\0\u0218\0\u025b\0\u029e\0\u02e1"+
    "\0\u0324\0\u0367\0\u03aa\0\u03ed\0\u0430\0\u0473\0\u04b6\0\u04f9"+
    "\0\u053c\0\u057f\0\u05c2\0\u0605\0\u0648\0\u068b\0\u06ce\0\u0711"+
    "\0\u0754\0\u0797\0\u07da\0\u081d\0\206\0\u0860\0\206\0\u08a3"+
    "\0\u0192\0\u08e6\0\u0929\0\u096c\0\u09af\0\u09f2\0\u0a35\0\u0a78"+
    "\0\u0abb\0\u0afe\0\u0b41\0\u0b84\0\u0bc7\0\u0c0a\0\u0c4d\0\u0c90"+
    "\0\u0cd3\0\u0d16\0\u0d59\0\u0d9c\0\u0ddf\0\u0e22\0\u0e65\0\u0ea8"+
    "\0\u0eeb\0\u0f2e\0\u0f71\0\u0fb4\0\u0ff7\0\u103a\0\u107d\0\u10c0"+
    "\0\u1103\0\u1146\0\u1189\0\103\0\206\0\u11cc\0\u120f\0\u1252"+
    "\0\u1295\0\u12d8\0\u131b\0\u135e\0\u13a1\0\u13e4\0\u1427\0\u146a"+
    "\0\u14ad\0\u14f0\0\u1533\0\u1576\0\u15b9\0\u15fc\0\u163f\0\u1682"+
    "\0\u16c5\0\u1708\0\u174b\0\u178e\0\u17d1\0\u1814\0\u1857\0\u189a"+
    "\0\u18dd\0\u1920\0\u1963\0\u19a6\0\u19e9\0\u1a2c\0\u1a6f\0\u1ab2"+
    "\0\u1af5\0\u1b38\0\u1b7b\0\u1bbe\0\u1252\0\u04f9\0\u1c01\0\u1c44"+
    "\0\u0860\0\u1c87\0\u1cca\0\u1d0d\0\u1d50\0\u1d93\0\u1dd6\0\u1e19"+
    "\0\u1e5c\0\u1e9f\0\u1ee2\0\u1f25\0\u1f68\0\u1fab\0\u1fee\0\u2031"+
    "\0\u2074\0\u20b7\0\u20fa\0\u213d\0\u2180\0\u21c3\0\u2206\0\u2249"+
    "\0\u228c\0\u22cf\0\u2312\0\u2355\0\u2398\0\u23db\0\u241e\0\103"+
    "\0\u2461\0\u24a4\0\u24e7\0\u252a\0\u256d\0\u25b0\0\u25f3\0\u2636"+
    "\0\u2679\0\u26bc\0\u26ff\0\u2742\0\u241e\0\u2785\0\u27c8\0\u280b"+
    "\0\u284e\0\u2891\0\u28d4\0\u2917\0\u295a\0\u299d\0\u29e0\0\u2a23"+
    "\0\u2a66\0\u2aa9\0\u2aec\0\u2b2f\0\u2b72\0\u2bb5\0\u2bf8\0\u2c3b"+
    "\0\u2c7e\0\u2cc1\0\u2d04\0\u2d47\0\u2d8a\0\u2dcd\0\u2e10\0\u2e53"+
    "\0\u2e96\0\u2ed9\0\u2f1c\0\u2f5f\0\u2fa2\0\u2fe5\0\u3028\0\u306b"+
    "\0\u30ae\0\u30f1\0\u3134\0\u3177\0\u31ba\0\u31fd\0\u3240\0\u3283"+
    "\0\u32c6\0\u3309\0\u334c\0\u338f\0\u33d2\0\u3415\0\u3458\0\u349b"+
    "\0\u34de\0\u3521\0\u3564\0\u35a7\0\u35ea\0\u362d\0\u3670\0\u36b3"+
    "\0\u36f6\0\u3739\0\u377c\0\u37bf\0\u3802\0\u3845\0\u3888\0\u38cb"+
    "\0\u390e\0\u3951\0\u3994\0\u39d7\0\u3a1a\0\u3a5d\0\u3aa0\0\u3ae3"+
    "\0\u3b26\0\u3b69\0\u3bac\0\u3bef\0\u3c32\0\u3c75\0\u3cb8\0\u3cfb"+
    "\0\u3d3e\0\u3d81\0\u3dc4\0\u3e07\0\u3e4a\0\u3e8d\0\u3ed0\0\u3f13"+
    "\0\u3f56\0\u3f99\0\u3fdc\0\u401f\0\u4062\0\u40a5\0\u40e8\0\u412b"+
    "\0\u416e\0\u41b1\0\u41f4\0\u4237\0\u427a\0\u42bd\0\u4300\0\u4343"+
    "\0\u4386\0\u43c9\0\u440c\0\u444f\0\u4492\0\u44d5\0\u4518\0\u455b"+
    "\0\u459e\0\u45e1\0\u4624\0\u4667\0\u46aa\0\u46ed\0\u4730\0\u4773"+
    "\0\u47b6\0\u47f9\0\u483c\0\u487f\0\u48c2\0\u4905\0\u4948\0\u498b"+
    "\0\u49ce\0\u4a11\0\u362d\0\u4a54\0\u4a97\0\u4ada\0\u4b1d\0\u4b60"+
    "\0\u4ba3\0\u4be6\0\u4c29\0\u4c6c\0\u4caf\0\u4cf2\0\u4d35\0\u4d78"+
    "\0\u4dbb\0\u4dfe\0\u4e41\0\u4e84\0\u4ec7\0\u4f0a\0\u4f4d\0\u4f90"+
    "\0\u4fd3\0\u5016\0\u5059\0\u509c\0\u50df\0\u5122\0\u5165\0\u51a8"+
    "\0\u51eb\0\u522e\0\u5271\0\u52b4\0\u52f7\0\u533a\0\u537d\0\u53c0"+
    "\0\u5403\0\u5446\0\u5489\0\u54cc\0\u550f\0\u5552\0\u5595\0\u55d8"+
    "\0\u561b\0\u565e\0\u56a1\0\u56e4\0\u5727\0\u576a\0\u57ad\0\u57f0"+
    "\0\u5833\0\u5876\0\u58b9\0\u58fc\0\u593f\0\u5982\0\u59c5\0\u5a08"+
    "\0\u5a4b\0\u5a8e\0\u5ad1\0\u5b14\0\u5b57\0\u5b9a\0\u5bdd\0\u5c20"+
    "\0\u5c63\0\u5ca6\0\u5ce9\0\u5d2c\0\u5d6f\0\u5db2\0\u5df5\0\u5e38"+
    "\0\u5e7b\0\u5ebe\0\u5f01\0\u5f44\0\u5f87\0\u5fca\0\u600d\0\u6050"+
    "\0\u6093\0\u60d6\0\u6119\0\u615c\0\u619f\0\u61e2\0\u6225\0\u6268"+
    "\0\u62ab\0\u62ee\0\u6331\0\u6374\0\u63b7\0\u63fa\0\u643d\0\u6480"+
    "\0\u64c3\0\u6506\0\u6549\0\u658c\0\u65cf\0\u6612\0\u6655\0\u6698"+
    "\0\u66db\0\u671e\0\u6761\0\u67a4\0\u67e7\0\u682a\0\u686d\0\u68b0"+
    "\0\u68f3\0\u6936\0\u6979\0\u69bc\0\u69ff\0\u6a42\0\u6a85\0\u6ac8"+
    "\0\u6b0b\0\u6b4e\0\u6b91\0\u6bd4\0\u6c17\0\u6c5a\0\u6c9d\0\u6ce0"+
    "\0\u6d23\0\u6d66\0\u6da9\0\u6dec\0\u6e2f\0\u6e72\0\u6eb5\0\u6ef8"+
    "\0\u6f3b\0\u6f7e\0\u6fc1\0\u7004\0\u7047\0\u708a\0\u70cd\0\u7110"+
    "\0\u7153\0\u7196\0\u71d9\0\u721c\0\u725f\0\u72a2\0\u72e5\0\u7328"+
    "\0\u736b\0\u73ae\0\u73f1\0\u7434\0\u7477\0\u74ba\0\u74fd\0\u7540"+
    "\0\u7583\0\u75c6\0\u7609\0\u764c\0\u768f\0\u76d2\0\u7715\0\u7758"+
    "\0\u779b\0\u77de\0\u7821\0\u7864\0\u78a7\0\u78ea\0\u792d\0\u7970"+
    "\0\u79b3\0\u79f6\0\u7a39\0\u7a7c\0\u7abf\0\u7b02\0\u7b45\0\u7b88"+
    "\0\u7bcb\0\u7c0e\0\u7c51\0\u7c94\0\u7cd7\0\u7d1a\0\u7d5d\0\u7da0"+
    "\0\u7de3\0\u7e26\0\u7e69\0\u7eac\0\u7eef\0\u7f32\0\u7f75\0\u7fb8"+
    "\0\u7ffb\0\u803e\0\u8081\0\u80c4\0\u8107\0\u814a\0\u818d\0\u81d0"+
    "\0\u8213\0\u8256\0\u8299\0\u82dc\0\u831f\0\u8362\0\u83a5\0\u83e8"+
    "\0\u842b\0\u846e\0\u84b1\0\u84f4\0\u8537\0\u857a\0\u85bd\0\u8600"+
    "\0\u8643\0\u8686\0\u86c9\0\u870c\0\u874f\0\u8792\0\u87d5\0\u8818"+
    "\0\u885b\0\u889e\0\u88e1\0\u8924\0\u8967\0\u89aa\0\u89ed\0\u8a30"+
    "\0\u8a73\0\u8ab6\0\u8af9\0\u8b3c\0\u8b7f\0\u8bc2\0\u8c05\0\u8c48"+
    "\0\u8c8b\0\u8cce\0\u8d11\0\u8d54\0\u8d97\0\u8dda\0\u8e1d\0\u8e60"+
    "\0\u8ea3\0\u8ee6\0\u8f29\0\u8f6c\0\u8faf\0\u8ff2\0\u9035\0\u9078"+
    "\0\u90bb\0\u90fe\0\u9141\0\u9184\0\u91c7\0\u920a\0\u924d\0\u9290"+
    "\0\u92d3\0\u9316\0\u9359\0\u939c\0\u93df\0\u9422\0\u9465\0\u94a8"+
    "\0\u94eb\0\u952e\0\u9571\0\u95b4\0\u95f7\0\u963a\0\u967d\0\u96c0"+
    "\0\u9703\0\u9746\0\u9789\0\u97cc\0\u980f\0\u9852\0\u9895\0\u98d8"+
    "\0\u991b\0\u995e\0\u99a1\0\u99e4\0\u9a27\0\u9a6a\0\u9aad\0\u9af0"+
    "\0\u9b33\0\u9b76\0\u9bb9\0\u9bfc\0\u9c3f\0\u9c82\0\u9cc5\0\u9d08"+
    "\0\u9d4b\0\u9d8e\0\u9dd1\0\u9e14\0\u9e57\0\u9e9a\0\u9edd\0\u9f20"+
    "\0\u9f63\0\u9fa6\0\u9fe9\0\ua02c\0\ua06f\0\ua0b2\0\ua0f5\0\ua138"+
    "\0\ua17b\0\ua1be\0\ua201\0\ua244\0\ua287\0\ua2ca\0\ua30d\0\ua350"+
    "\0\ua393\0\ua3d6\0\ua419";

  private static int [] zzUnpackRowMap() {
    int [] result = new int[651];
    int offset = 0;
    offset = zzUnpackRowMap(ZZ_ROWMAP_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackRowMap(String packed, int offset, int [] result) {
    int i = 0;  /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int high = packed.charAt(i++) << 16;
      result[j++] = high | packed.charAt(i++);
    }
    return j;
  }

  /** 
   * The transition table of the DFA
   */
  private static final int [] ZZ_TRANS = zzUnpackTrans();

  private static final String ZZ_TRANS_PACKED_0 =
    "\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11"+
    "\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21"+
    "\1\22\1\23\1\24\3\3\1\25\1\26\3\3\1\27"+
    "\1\3\1\30\1\31\1\32\1\33\1\3\1\34\1\35"+
    "\1\36\3\3\1\37\1\40\1\41\3\40\1\42\1\43"+
    "\3\40\1\44\1\40\1\45\1\46\1\47\1\50\1\40"+
    "\1\51\1\52\1\53\3\40\1\54\1\2\1\3\105\0"+
    "\1\55\46\0\30\55\4\0\1\4\4\0\1\56\76\0"+
    "\2\5\77\0\1\57\1\0\2\5\15\0\27\57\30\40"+
    "\1\0\1\57\1\0\4\60\1\61\1\60\3\0\1\60"+
    "\1\0\1\60\5\0\60\60\3\0\1\55\20\0\1\62"+
    "\25\0\2\55\1\63\25\55\4\0\1\55\17\0\1\64"+
    "\2\0\1\65\23\0\1\55\1\66\2\55\1\67\23\55"+
    "\4\0\1\55\43\0\1\70\2\0\25\55\1\71\2\55"+
    "\4\0\1\55\22\0\1\72\23\0\4\55\1\73\23\55"+
    "\4\0\1\55\17\0\1\74\4\0\1\75\1\76\20\0"+
    "\1\55\1\77\4\55\1\100\1\101\20\55\4\0\1\55"+
    "\25\0\1\102\20\0\7\55\1\103\20\55\4\0\1\55"+
    "\22\0\1\104\1\0\1\105\21\0\4\55\1\106\1\55"+
    "\1\107\21\55\4\0\1\55\21\0\1\110\24\0\3\55"+
    "\1\111\24\55\4\0\1\55\17\0\1\112\2\0\1\113"+
    "\1\0\1\114\2\0\1\115\16\0\1\55\1\116\2\55"+
    "\1\117\1\55\1\120\2\55\1\121\16\55\4\0\1\55"+
    "\25\0\1\122\20\0\7\55\1\123\20\55\4\0\1\55"+
    "\21\0\1\124\24\0\3\55\1\125\24\55\4\0\1\55"+
    "\25\0\1\126\20\0\7\55\1\127\20\55\3\0\1\130"+
    "\1\131\14\0\1\132\2\0\27\130\30\40\3\0\1\130"+
    "\1\131\14\0\1\132\2\0\1\130\1\133\25\130\2\40"+
    "\1\134\25\40\3\0\1\130\1\131\14\0\1\132\2\0"+
    "\1\135\2\130\1\136\23\130\1\40\1\137\2\40\1\140"+
    "\23\40\3\0\1\130\1\131\14\0\1\132\2\0\24\130"+
    "\1\141\2\130\25\40\1\142\2\40\3\0\1\130\1\131"+
    "\14\0\1\132\2\0\3\130\1\143\23\130\4\40\1\144"+
    "\23\40\3\0\1\130\1\131\14\0\1\132\2\0\1\145"+
    "\4\130\1\146\1\147\20\130\1\40\1\150\4\40\1\151"+
    "\1\152\20\40\3\0\1\130\1\131\14\0\1\132\2\0"+
    "\6\130\1\153\20\130\7\40\1\154\20\40\3\0\1\130"+
    "\1\131\14\0\1\132\2\0\3\130\1\155\1\130\1\156"+
    "\21\130\4\40\1\157\1\40\1\160\21\40\3\0\1\130"+
    "\1\131\14\0\1\132\2\0\2\130\1\161\24\130\3\40"+
    "\1\162\24\40\3\0\1\130\1\131\14\0\1\132\2\0"+
    "\1\163\2\130\1\164\1\130\1\165\2\130\1\166\16\130"+
    "\1\40\1\167\2\40\1\170\1\40\1\171\2\40\1\172"+
    "\16\40\3\0\1\130\1\131\14\0\1\132\2\0\6\130"+
    "\1\173\20\130\7\40\1\174\20\40\3\0\1\130\1\131"+
    "\14\0\1\132\2\0\2\130\1\175\24\130\3\40\1\176"+
    "\24\40\3\0\1\130\1\131\14\0\1\132\2\0\6\130"+
    "\1\177\20\130\7\40\1\200\20\40\4\0\1\201\101\0"+
    "\4\60\1\202\1\60\3\0\1\60\1\0\1\60\5\0"+
    "\60\60\25\0\1\203\27\0\1\203\30\0\1\55\21\0"+
    "\1\203\24\0\3\55\1\204\24\55\26\0\1\205\27\0"+
    "\1\205\63\0\1\206\27\0\1\206\17\0\1\55\21\0"+
    "\1\205\24\0\3\55\1\207\24\55\4\0\1\55\32\0"+
    "\1\206\13\0\14\55\1\210\13\55\51\0\1\211\27\0"+
    "\1\211\5\0\1\55\44\0\1\211\1\0\26\55\1\212"+
    "\1\55\25\0\1\124\27\0\1\124\31\0\1\55\20\0"+
    "\1\124\25\0\2\55\1\125\25\55\30\0\1\213\27\0"+
    "\1\213\62\0\1\124\27\0\1\124\45\0\1\214\27\0"+
    "\1\214\23\0\1\55\23\0\1\213\22\0\5\55\1\215"+
    "\22\55\4\0\1\55\33\0\1\124\12\0\15\55\1\125"+
    "\12\55\4\0\1\55\26\0\1\214\17\0\10\55\1\216"+
    "\17\55\37\0\1\124\27\0\1\124\17\0\1\55\32\0"+
    "\1\124\13\0\14\55\1\125\13\55\26\0\1\217\27\0"+
    "\1\217\50\0\1\220\27\0\1\220\32\0\1\55\21\0"+
    "\1\217\24\0\3\55\1\221\24\55\4\0\1\55\17\0"+
    "\1\220\26\0\1\55\1\222\26\55\27\0\1\223\27\0"+
    "\1\223\27\0\1\55\22\0\1\223\23\0\4\55\1\224"+
    "\23\55\41\0\1\124\27\0\1\124\51\0\1\225\27\0"+
    "\1\225\56\0\1\226\27\0\1\226\46\0\1\227\27\0"+
    "\1\227\16\0\1\55\34\0\1\124\11\0\16\55\1\125"+
    "\11\55\4\0\1\55\33\0\1\225\12\0\15\55\1\230"+
    "\12\55\4\0\1\55\37\0\1\226\6\0\21\55\1\231"+
    "\6\55\4\0\1\55\33\0\1\227\12\0\15\55\1\232"+
    "\12\55\40\0\1\233\27\0\1\233\16\0\1\55\33\0"+
    "\1\233\12\0\15\55\1\234\12\55\35\0\1\235\27\0"+
    "\1\235\21\0\1\55\30\0\1\235\15\0\12\55\1\236"+
    "\15\55\3\0\1\130\1\237\14\0\1\132\2\0\27\130"+
    "\30\237\3\0\1\130\1\131\14\0\1\132\2\0\27\130"+
    "\30\237\22\0\1\240\63\0\1\130\1\237\14\0\1\132"+
    "\2\0\2\130\1\241\24\130\3\237\1\242\24\237\3\0"+
    "\1\130\1\131\14\0\1\132\2\0\2\130\1\241\24\130"+
    "\3\40\1\243\24\40\3\0\1\130\1\237\14\0\1\132"+
    "\2\0\2\130\1\244\24\130\3\237\1\245\24\237\3\0"+
    "\1\130\1\237\14\0\1\132\2\0\13\130\1\246\13\130"+
    "\14\237\1\247\13\237\3\0\1\130\1\131\14\0\1\132"+
    "\2\0\2\130\1\244\24\130\3\40\1\250\24\40\3\0"+
    "\1\130\1\131\14\0\1\132\2\0\13\130\1\246\13\130"+
    "\14\40\1\251\13\40\3\0\1\130\1\237\14\0\1\132"+
    "\2\0\25\130\1\252\1\130\26\237\1\253\1\237\3\0"+
    "\1\130\1\131\14\0\1\132\2\0\25\130\1\252\1\130"+
    "\26\40\1\254\1\40\3\0\1\130\1\237\14\0\1\132"+
    "\2\0\1\130\1\175\25\130\2\237\1\255\25\237\3\0"+
    "\1\130\1\131\14\0\1\132\2\0\1\130\1\175\25\130"+
    "\2\40\1\176\25\40\3\0\1\130\1\237\14\0\1\132"+
    "\2\0\4\130\1\256\22\130\5\237\1\257\22\237\3\0"+
    "\1\130\1\237\14\0\1\132\2\0\14\130\1\175\12\130"+
    "\15\237\1\255\12\237\3\0\1\130\1\237\14\0\1\132"+
    "\2\0\7\130\1\260\17\130\10\237\1\261\17\237\3\0"+
    "\1\130\1\131\14\0\1\132\2\0\4\130\1\256\22\130"+
    "\5\40\1\262\22\40\3\0\1\130\1\131\14\0\1\132"+
    "\2\0\14\130\1\175\12\130\15\40\1\176\12\40\3\0"+
    "\1\130\1\131\14\0\1\132\2\0\7\130\1\260\17\130"+
    "\10\40\1\263\17\40\3\0\1\130\1\237\14\0\1\132"+
    "\2\0\13\130\1\175\13\130\14\237\1\255\13\237\3\0"+
    "\1\130\1\131\14\0\1\132\2\0\13\130\1\175\13\130"+
    "\14\40\1\176\13\40\3\0\1\130\1\237\14\0\1\132"+
    "\2\0\2\130\1\264\24\130\3\237\1\265\24\237\3\0"+
    "\1\130\1\237\14\0\1\132\2\0\1\266\26\130\1\237"+
    "\1\267\26\237\3\0\1\130\1\131\14\0\1\132\2\0"+
    "\2\130\1\264\24\130\3\40\1\270\24\40\3\0\1\130"+
    "\1\131\14\0\1\132\2\0\1\266\26\130\1\40\1\271"+
    "\26\40\3\0\1\130\1\237\14\0\1\132\2\0\3\130"+
    "\1\272\23\130\4\237\1\273\23\237\3\0\1\130\1\131"+
    "\14\0\1\132\2\0\3\130\1\272\23\130\4\40\1\274"+
    "\23\40\3\0\1\130\1\237\14\0\1\132\2\0\15\130"+
    "\1\175\11\130\16\237\1\255\11\237\3\0\1\130\1\237"+
    "\14\0\1\132\2\0\14\130\1\275\12\130\15\237\1\276"+
    "\12\237\3\0\1\130\1\237\14\0\1\132\2\0\20\130"+
    "\1\277\6\130\21\237\1\300\6\237\3\0\1\130\1\237"+
    "\14\0\1\132\2\0\14\130\1\301\12\130\15\237\1\302"+
    "\12\237\3\0\1\130\1\131\14\0\1\132\2\0\15\130"+
    "\1\175\11\130\16\40\1\176\11\40\3\0\1\130\1\131"+
    "\14\0\1\132\2\0\14\130\1\275\12\130\15\40\1\303"+
    "\12\40\3\0\1\130\1\131\14\0\1\132\2\0\20\130"+
    "\1\277\6\130\21\40\1\304\6\40\3\0\1\130\1\131"+
    "\14\0\1\132\2\0\14\130\1\301\12\130\15\40\1\305"+
    "\12\40\3\0\1\130\1\237\14\0\1\132\2\0\14\130"+
    "\1\306\12\130\15\237\1\307\12\237\3\0\1\130\1\131"+
    "\14\0\1\132\2\0\14\130\1\306\12\130\15\40\1\310"+
    "\12\40\3\0\1\130\1\237\14\0\1\132\2\0\11\130"+
    "\1\311\15\130\12\237\1\312\15\237\3\0\1\130\1\131"+
    "\14\0\1\132\2\0\11\130\1\311\15\130\12\40\1\313"+
    "\15\40\7\0\1\202\122\0\1\314\27\0\1\314\27\0"+
    "\1\55\22\0\1\314\23\0\4\55\1\315\23\55\27\0"+
    "\1\316\27\0\1\316\65\0\1\317\27\0\1\317\14\0"+
    "\1\55\22\0\1\316\23\0\4\55\1\320\23\55\4\0"+
    "\1\55\35\0\1\317\10\0\17\55\1\321\10\55\32\0"+
    "\1\322\27\0\1\322\24\0\1\55\25\0\1\322\20\0"+
    "\7\55\1\323\20\55\27\0\1\324\27\0\1\324\53\0"+
    "\1\325\27\0\1\325\26\0\1\55\22\0\1\324\23\0"+
    "\4\55\1\326\23\55\4\0\1\55\23\0\1\325\22\0"+
    "\5\55\1\327\22\55\27\0\1\330\27\0\1\330\65\0"+
    "\1\331\27\0\1\331\14\0\1\55\22\0\1\330\23\0"+
    "\4\55\1\332\23\55\4\0\1\55\35\0\1\331\10\0"+
    "\17\55\1\333\10\55\35\0\1\334\27\0\1\334\21\0"+
    "\1\55\30\0\1\334\15\0\12\55\1\335\15\55\30\0"+
    "\1\336\27\0\1\336\55\0\1\317\27\0\1\317\60\0"+
    "\1\337\27\0\1\337\15\0\1\55\23\0\1\336\22\0"+
    "\5\55\1\340\22\55\4\0\1\55\26\0\1\317\17\0"+
    "\10\55\1\321\17\55\4\0\1\55\34\0\1\337\11\0"+
    "\16\55\1\341\11\55\44\0\1\342\27\0\1\342\12\0"+
    "\1\55\37\0\1\342\6\0\21\55\1\343\6\55\30\0"+
    "\1\344\27\0\1\344\26\0\1\55\23\0\1\344\22\0"+
    "\5\55\1\345\22\55\3\0\1\346\1\237\14\0\1\132"+
    "\2\0\27\346\30\237\3\0\1\130\1\237\14\0\1\132"+
    "\2\0\3\130\1\347\23\130\4\237\1\350\23\237\3\0"+
    "\1\346\1\237\14\0\1\132\2\0\3\346\1\351\23\346"+
    "\4\237\1\350\23\237\3\0\1\130\1\131\14\0\1\132"+
    "\2\0\3\130\1\347\23\130\4\40\1\352\23\40\3\0"+
    "\1\130\1\237\14\0\1\132\2\0\3\130\1\353\23\130"+
    "\4\237\1\354\23\237\3\0\1\346\1\237\14\0\1\132"+
    "\2\0\3\346\1\355\23\346\4\237\1\354\23\237\3\0"+
    "\1\130\1\237\14\0\1\132\2\0\16\130\1\356\10\130"+
    "\17\237\1\357\10\237\3\0\1\346\1\237\14\0\1\132"+
    "\2\0\16\346\1\360\10\346\17\237\1\357\10\237\3\0"+
    "\1\130\1\131\14\0\1\132\2\0\3\130\1\353\23\130"+
    "\4\40\1\361\23\40\3\0\1\130\1\131\14\0\1\132"+
    "\2\0\16\130\1\356\10\130\17\40\1\362\10\40\3\0"+
    "\1\130\1\237\14\0\1\132\2\0\6\130\1\363\20\130"+
    "\7\237\1\364\20\237\3\0\1\346\1\237\14\0\1\132"+
    "\2\0\6\346\1\365\20\346\7\237\1\364\20\237\3\0"+
    "\1\130\1\131\14\0\1\132\2\0\6\130\1\363\20\130"+
    "\7\40\1\366\20\40\3\0\1\130\1\237\14\0\1\132"+
    "\2\0\3\130\1\367\23\130\4\237\1\370\23\237\3\0"+
    "\1\346\1\237\14\0\1\132\2\0\3\346\1\371\23\346"+
    "\4\237\1\370\23\237\3\0\1\130\1\237\14\0\1\132"+
    "\2\0\4\130\1\372\22\130\5\237\1\373\22\237\3\0"+
    "\1\346\1\237\14\0\1\132\2\0\4\346\1\374\22\346"+
    "\5\237\1\373\22\237\3\0\1\130\1\131\14\0\1\132"+
    "\2\0\3\130\1\367\23\130\4\40\1\375\23\40\3\0"+
    "\1\130\1\131\14\0\1\132\2\0\4\130\1\372\22\130"+
    "\5\40\1\376\22\40\3\0\1\130\1\237\14\0\1\132"+
    "\2\0\3\130\1\377\23\130\4\237\1\u0100\23\237\3\0"+
    "\1\346\1\237\14\0\1\132\2\0\3\346\1\u0101\23\346"+
    "\4\237\1\u0100\23\237\3\0\1\130\1\237\14\0\1\132"+
    "\2\0\16\130\1\u0102\10\130\17\237\1\u0103\10\237\3\0"+
    "\1\346\1\237\14\0\1\132\2\0\16\346\1\u0104\10\346"+
    "\17\237\1\u0103\10\237\3\0\1\130\1\131\14\0\1\132"+
    "\2\0\3\130\1\377\23\130\4\40\1\u0105\23\40\3\0"+
    "\1\130\1\131\14\0\1\132\2\0\16\130\1\u0102\10\130"+
    "\17\40\1\u0106\10\40\3\0\1\130\1\237\14\0\1\132"+
    "\2\0\11\130\1\u0107\15\130\12\237\1\u0108\15\237\3\0"+
    "\1\346\1\237\14\0\1\132\2\0\11\346\1\u0109\15\346"+
    "\12\237\1\u0108\15\237\3\0\1\130\1\131\14\0\1\132"+
    "\2\0\11\130\1\u0107\15\130\12\40\1\u010a\15\40\3\0"+
    "\1\130\1\237\14\0\1\132\2\0\4\130\1\u010b\22\130"+
    "\5\237\1\u010c\22\237\3\0\1\346\1\237\14\0\1\132"+
    "\2\0\4\346\1\u010d\22\346\5\237\1\u010c\22\237\3\0"+
    "\1\130\1\237\14\0\1\132\2\0\7\130\1\356\17\130"+
    "\10\237\1\357\17\237\3\0\1\346\1\237\14\0\1\132"+
    "\2\0\7\346\1\360\17\346\10\237\1\357\17\237\3\0"+
    "\1\130\1\237\14\0\1\132\2\0\15\130\1\u010e\11\130"+
    "\16\237\1\u010f\11\237\3\0\1\346\1\237\14\0\1\132"+
    "\2\0\15\346\1\u0110\11\346\16\237\1\u010f\11\237\3\0"+
    "\1\130\1\131\14\0\1\132\2\0\4\130\1\u010b\22\130"+
    "\5\40\1\u0111\22\40\3\0\1\130\1\131\14\0\1\132"+
    "\2\0\7\130\1\356\17\130\10\40\1\362\17\40\3\0"+
    "\1\130\1\131\14\0\1\132\2\0\15\130\1\u010e\11\130"+
    "\16\40\1\u0112\11\40\3\0\1\130\1\237\14\0\1\132"+
    "\2\0\20\130\1\u0113\6\130\21\237\1\u0114\6\237\3\0"+
    "\1\346\1\237\14\0\1\132\2\0\20\346\1\u0115\6\346"+
    "\21\237\1\u0114\6\237\3\0\1\130\1\131\14\0\1\132"+
    "\2\0\20\130\1\u0113\6\130\21\40\1\u0116\6\40\3\0"+
    "\1\130\1\237\14\0\1\132\2\0\4\130\1\u0117\22\130"+
    "\5\237\1\u0118\22\237\3\0\1\346\1\237\14\0\1\132"+
    "\2\0\4\346\1\u0119\22\346\5\237\1\u0118\22\237\3\0"+
    "\1\130\1\131\14\0\1\132\2\0\4\130\1\u0117\22\130"+
    "\5\40\1\u011a\22\40\25\0\1\u011b\27\0\1\u011b\31\0"+
    "\1\55\20\0\1\u011b\25\0\2\55\1\u011c\25\55\24\0"+
    "\1\124\27\0\1\124\62\0\1\124\27\0\1\124\22\0"+
    "\1\55\17\0\1\124\26\0\1\55\1\125\26\55\4\0"+
    "\1\55\27\0\1\124\16\0\11\55\1\125\16\55\31\0"+
    "\1\u011d\27\0\1\u011d\25\0\1\55\24\0\1\u011d\21\0"+
    "\6\55\1\u011e\21\55\26\0\1\u011f\27\0\1\u011f\55\0"+
    "\1\u0120\27\0\1\u0120\25\0\1\55\21\0\1\u011f\24\0"+
    "\3\55\1\u0121\24\55\4\0\1\55\24\0\1\u0120\21\0"+
    "\6\55\1\u0122\21\55\44\0\1\u0123\27\0\1\u0123\42\0"+
    "\1\u0124\27\0\1\u0124\22\0\1\55\37\0\1\u0123\6\0"+
    "\21\55\1\u0125\6\55\4\0\1\55\27\0\1\u0124\16\0"+
    "\11\55\1\u0126\16\55\27\0\1\u0127\27\0\1\u0127\27\0"+
    "\1\55\22\0\1\u0127\23\0\4\55\1\u0128\23\55\26\0"+
    "\1\u0129\27\0\1\u0129\55\0\1\233\27\0\1\233\25\0"+
    "\1\55\21\0\1\u0129\24\0\3\55\1\u012a\24\55\4\0"+
    "\1\55\24\0\1\233\21\0\6\55\1\234\21\55\31\0"+
    "\1\u012b\27\0\1\u012b\25\0\1\55\24\0\1\u012b\21\0"+
    "\6\55\1\u012c\21\55\31\0\1\u012d\27\0\1\u012d\25\0"+
    "\1\55\24\0\1\u012d\21\0\6\55\1\u012e\21\55\3\0"+
    "\2\346\14\0\1\132\2\0\57\346\3\0\1\130\1\237"+
    "\14\0\1\132\2\0\1\130\1\u012f\25\130\2\237\1\u0130"+
    "\25\237\3\0\1\346\1\237\14\0\1\132\2\0\1\346"+
    "\1\u0131\25\346\2\237\1\u0130\25\237\3\0\2\346\14\0"+
    "\1\132\2\0\1\346\1\u0131\27\346\1\u0131\25\346\3\0"+
    "\1\130\1\131\14\0\1\132\2\0\1\130\1\u012f\25\130"+
    "\2\40\1\u0132\25\40\3\0\1\130\1\237\14\0\1\132"+
    "\2\0\1\175\26\130\1\237\1\255\26\237\3\0\1\346"+
    "\1\237\14\0\1\132\2\0\1\u0133\26\346\1\237\1\255"+
    "\26\237\3\0\2\346\14\0\1\132\2\0\1\u0133\27\346"+
    "\1\u0133\26\346\3\0\1\130\1\237\14\0\1\132\2\0"+
    "\10\130\1\175\16\130\11\237\1\255\16\237\3\0\1\346"+
    "\1\237\14\0\1\132\2\0\10\346\1\u0133\16\346\11\237"+
    "\1\255\16\237\3\0\2\346\14\0\1\132\2\0\10\346"+
    "\1\u0133\27\346\1\u0133\16\346\3\0\1\130\1\131\14\0"+
    "\1\132\2\0\1\175\26\130\1\40\1\176\26\40\3\0"+
    "\1\130\1\131\14\0\1\132\2\0\10\130\1\175\16\130"+
    "\11\40\1\176\16\40\3\0\1\130\1\237\14\0\1\132"+
    "\2\0\5\130\1\u0134\21\130\6\237\1\u0135\21\237\3\0"+
    "\1\346\1\237\14\0\1\132\2\0\5\346\1\u0136\21\346"+
    "\6\237\1\u0135\21\237\3\0\2\346\14\0\1\132\2\0"+
    "\5\346\1\u0136\27\346\1\u0136\21\346\3\0\1\130\1\131"+
    "\14\0\1\132\2\0\5\130\1\u0134\21\130\6\40\1\u0137"+
    "\21\40\3\0\1\130\1\237\14\0\1\132\2\0\2\130"+
    "\1\u0138\24\130\3\237\1\u0139\24\237\3\0\1\346\1\237"+
    "\14\0\1\132\2\0\2\346\1\u013a\24\346\3\237\1\u0139"+
    "\24\237\3\0\2\346\14\0\1\132\2\0\2\346\1\u013a"+
    "\27\346\1\u013a\24\346\3\0\1\130\1\237\14\0\1\132"+
    "\2\0\5\130\1\u013b\21\130\6\237\1\u013c\21\237\3\0"+
    "\1\346\1\237\14\0\1\132\2\0\5\346\1\u013d\21\346"+
    "\6\237\1\u013c\21\237\3\0\2\346\14\0\1\132\2\0"+
    "\5\346\1\u013d\27\346\1\u013d\21\346\3\0\1\130\1\131"+
    "\14\0\1\132\2\0\2\130\1\u0138\24\130\3\40\1\u013e"+
    "\24\40\3\0\1\130\1\131\14\0\1\132\2\0\5\130"+
    "\1\u013b\21\130\6\40\1\u013f\21\40\3\0\1\130\1\237"+
    "\14\0\1\132\2\0\20\130\1\u0140\6\130\21\237\1\u0141"+
    "\6\237\3\0\1\346\1\237\14\0\1\132\2\0\20\346"+
    "\1\u0142\6\346\21\237\1\u0141\6\237\3\0\2\346\14\0"+
    "\1\132\2\0\20\346\1\u0142\27\346\1\u0142\6\346\3\0"+
    "\1\130\1\237\14\0\1\132\2\0\10\130\1\u0143\16\130"+
    "\11\237\1\u0144\16\237\3\0\1\346\1\237\14\0\1\132"+
    "\2\0\10\346\1\u0145\16\346\11\237\1\u0144\16\237\3\0"+
    "\2\346\14\0\1\132\2\0\10\346\1\u0145\27\346\1\u0145"+
    "\16\346\3\0\1\130\1\131\14\0\1\132\2\0\20\130"+
    "\1\u0140\6\130\21\40\1\u0146\6\40\3\0\1\130\1\131"+
    "\14\0\1\132\2\0\10\130\1\u0143\16\130\11\40\1\u0147"+
    "\16\40\3\0\1\130\1\237\14\0\1\132\2\0\3\130"+
    "\1\u0148\23\130\4\237\1\u0149\23\237\3\0\1\346\1\237"+
    "\14\0\1\132\2\0\3\346\1\u014a\23\346\4\237\1\u0149"+
    "\23\237\3\0\2\346\14\0\1\132\2\0\3\346\1\u014a"+
    "\27\346\1\u014a\23\346\3\0\1\130\1\131\14\0\1\132"+
    "\2\0\3\130\1\u0148\23\130\4\40\1\u014b\23\40\3\0"+
    "\1\130\1\237\14\0\1\132\2\0\2\130\1\u014c\24\130"+
    "\3\237\1\u014d\24\237\3\0\1\346\1\237\14\0\1\132"+
    "\2\0\2\346\1\u014e\24\346\3\237\1\u014d\24\237\3\0"+
    "\2\346\14\0\1\132\2\0\2\346\1\u014e\27\346\1\u014e"+
    "\24\346\3\0\1\130\1\237\14\0\1\132\2\0\5\130"+
    "\1\306\21\130\6\237\1\307\21\237\3\0\1\346\1\237"+
    "\14\0\1\132\2\0\5\346\1\u014f\21\346\6\237\1\307"+
    "\21\237\3\0\2\346\14\0\1\132\2\0\5\346\1\u014f"+
    "\27\346\1\u014f\21\346\3\0\1\130\1\131\14\0\1\132"+
    "\2\0\2\130\1\u014c\24\130\3\40\1\u0150\24\40\3\0"+
    "\1\130\1\131\14\0\1\132\2\0\5\130\1\306\21\130"+
    "\6\40\1\310\21\40\3\0\1\130\1\237\14\0\1\132"+
    "\2\0\5\130\1\u0151\21\130\6\237\1\u0152\21\237\3\0"+
    "\1\346\1\237\14\0\1\132\2\0\5\346\1\u0153\21\346"+
    "\6\237\1\u0152\21\237\3\0\2\346\14\0\1\132\2\0"+
    "\5\346\1\u0153\27\346\1\u0153\21\346\3\0\1\130\1\131"+
    "\14\0\1\132\2\0\5\130\1\u0151\21\130\6\40\1\u0154"+
    "\21\40\3\0\1\130\1\237\14\0\1\132\2\0\5\130"+
    "\1\u0155\21\130\6\237\1\u0156\21\237\3\0\1\346\1\237"+
    "\14\0\1\132\2\0\5\346\1\u0157\21\346\6\237\1\u0156"+
    "\21\237\3\0\2\346\14\0\1\132\2\0\5\346\1\u0157"+
    "\27\346\1\u0157\21\346\3\0\1\130\1\131\14\0\1\132"+
    "\2\0\5\130\1\u0155\21\130\6\40\1\u0158\21\40\24\0"+
    "\1\u0159\27\0\1\u0159\32\0\1\55\17\0\1\u0159\26\0"+
    "\1\55\1\u015a\26\55\27\0\1\u015b\27\0\1\u015b\27\0"+
    "\1\55\22\0\1\u015b\23\0\4\55\1\u015c\23\55\31\0"+
    "\1\u015d\27\0\1\u015d\65\0\1\u015e\27\0\1\u015e\12\0"+
    "\1\55\24\0\1\u015d\21\0\6\55\1\u015f\21\55\4\0"+
    "\1\55\37\0\1\u015e\6\0\21\55\1\u0160\6\55\46\0"+
    "\1\316\27\0\1\316\41\0\1\u0161\27\0\1\u0161\21\0"+
    "\1\55\41\0\1\316\4\0\23\55\1\320\4\55\4\0"+
    "\1\55\30\0\1\u0161\15\0\12\55\1\u0162\15\55\40\0"+
    "\1\u0163\27\0\1\u0163\16\0\1\55\33\0\1\u0163\12\0"+
    "\15\55\1\u0164\12\55\24\0\1\u0165\27\0\1\u0165\32\0"+
    "\1\55\17\0\1\u0165\26\0\1\55\1\u0166\26\55\34\0"+
    "\1\75\27\0\1\75\22\0\1\55\27\0\1\75\16\0"+
    "\11\55\1\100\16\55\45\0\1\u0167\27\0\1\u0167\11\0"+
    "\1\55\40\0\1\u0167\5\0\22\55\1\u0168\5\55\3\0"+
    "\1\130\1\237\14\0\1\132\2\0\1\u0169\26\130\1\237"+
    "\1\u016a\26\237\3\0\1\346\1\237\14\0\1\132\2\0"+
    "\1\u016b\26\346\1\237\1\u016a\26\237\3\0\2\346\14\0"+
    "\1\132\2\0\1\u016b\27\346\1\u016b\26\346\3\0\1\130"+
    "\1\131\14\0\1\132\2\0\1\u0169\26\130\1\40\1\u016c"+
    "\26\40\3\0\1\130\1\237\14\0\1\132\2\0\3\130"+
    "\1\u016d\23\130\4\237\1\u016e\23\237\3\0\1\346\1\237"+
    "\14\0\1\132\2\0\3\346\1\u016f\23\346\4\237\1\u016e"+
    "\23\237\3\0\2\346\14\0\1\132\2\0\3\346\1\u016f"+
    "\27\346\1\u016f\23\346\3\0\1\130\1\131\14\0\1\132"+
    "\2\0\3\130\1\u016d\23\130\4\40\1\u0170\23\40\3\0"+
    "\1\130\1\237\14\0\1\132\2\0\5\130\1\u0171\21\130"+
    "\6\237\1\u0172\21\237\3\0\1\346\1\237\14\0\1\132"+
    "\2\0\5\346\1\u0173\21\346\6\237\1\u0172\21\237\3\0"+
    "\2\346\14\0\1\132\2\0\5\346\1\u0173\27\346\1\u0173"+
    "\21\346\3\0\1\130\1\237\14\0\1\132\2\0\20\130"+
    "\1\u0174\6\130\21\237\1\u0175\6\237\3\0\1\346\1\237"+
    "\14\0\1\132\2\0\20\346\1\u0176\6\346\21\237\1\u0175"+
    "\6\237\3\0\2\346\14\0\1\132\2\0\20\346\1\u0176"+
    "\27\346\1\u0176\6\346\3\0\1\130\1\131\14\0\1\132"+
    "\2\0\5\130\1\u0171\21\130\6\40\1\u0177\21\40\3\0"+
    "\1\130\1\131\14\0\1\132\2\0\20\130\1\u0174\6\130"+
    "\21\40\1\u0178\6\40\3\0\1\130\1\237\14\0\1\132"+
    "\2\0\22\130\1\353\4\130\23\237\1\354\4\237\3\0"+
    "\1\346\1\237\14\0\1\132\2\0\22\346\1\355\4\346"+
    "\23\237\1\354\4\237\3\0\2\346\14\0\1\132\2\0"+
    "\22\346\1\355\27\346\1\355\4\346\3\0\1\130\1\237"+
    "\14\0\1\132\2\0\11\130\1\u0179\15\130\12\237\1\u017a"+
    "\15\237\3\0\1\346\1\237\14\0\1\132\2\0\11\346"+
    "\1\u017b\15\346\12\237\1\u017a\15\237\3\0\2\346\14\0"+
    "\1\132\2\0\11\346\1\u017b\27\346\1\u017b\15\346\3\0"+
    "\1\130\1\131\14\0\1\132\2\0\22\130\1\353\4\130"+
    "\23\40\1\361\4\40\3\0\1\130\1\131\14\0\1\132"+
    "\2\0\11\130\1\u0179\15\130\12\40\1\u017c\15\40\3\0"+
    "\1\130\1\237\14\0\1\132\2\0\14\130\1\u017d\12\130"+
    "\15\237\1\u017e\12\237\3\0\1\346\1\237\14\0\1\132"+
    "\2\0\14\346\1\u017f\12\346\15\237\1\u017e\12\237\3\0"+
    "\2\346\14\0\1\132\2\0\14\346\1\u017f\27\346\1\u017f"+
    "\12\346\3\0\1\130\1\131\14\0\1\132\2\0\14\130"+
    "\1\u017d\12\130\15\40\1\u0180\12\40\3\0\1\130\1\237"+
    "\14\0\1\132\2\0\1\u0181\26\130\1\237\1\u0182\26\237"+
    "\3\0\1\346\1\237\14\0\1\132\2\0\1\u0183\26\346"+
    "\1\237\1\u0182\26\237\3\0\2\346\14\0\1\132\2\0"+
    "\1\u0183\27\346\1\u0183\26\346\3\0\2\346\14\0\1\132"+
    "\2\0\20\346\1\u0115\27\346\1\u0115\6\346\3\0\1\130"+
    "\1\131\14\0\1\132\2\0\1\u0181\26\130\1\40\1\u0184"+
    "\26\40\3\0\1\130\1\237\14\0\1\132\2\0\10\130"+
    "\1\146\16\130\11\237\1\u0185\16\237\3\0\1\346\1\237"+
    "\14\0\1\132\2\0\10\346\1\u0186\16\346\11\237\1\u0185"+
    "\16\237\3\0\2\346\14\0\1\132\2\0\10\346\1\u0186"+
    "\27\346\1\u0186\16\346\3\0\1\130\1\131\14\0\1\132"+
    "\2\0\10\130\1\146\16\130\11\40\1\151\16\40\3\0"+
    "\1\130\1\237\14\0\1\132\2\0\21\130\1\u0187\5\130"+
    "\22\237\1\u0188\5\237\3\0\1\346\1\237\14\0\1\132"+
    "\2\0\21\346\1\u0189\5\346\22\237\1\u0188\5\237\3\0"+
    "\2\346\14\0\1\132\2\0\21\346\1\u0189\27\346\1\u0189"+
    "\5\346\3\0\1\130\1\131\14\0\1\132\2\0\21\130"+
    "\1\u0187\5\130\22\40\1\u018a\5\40\26\0\1\u018b\27\0"+
    "\1\u018b\30\0\1\55\21\0\1\u018b\24\0\3\55\1\u018c"+
    "\24\55\26\0\1\u018d\27\0\1\u018d\30\0\1\55\21\0"+
    "\1\u018d\24\0\3\55\1\u018e\24\55\24\0\1\u018f\27\0"+
    "\1\u018f\62\0\1\115\27\0\1\115\22\0\1\55\17\0"+
    "\1\u018f\26\0\1\55\1\u0190\26\55\4\0\1\55\27\0"+
    "\1\115\16\0\11\55\1\121\16\55\31\0\1\u0191\27\0"+
    "\1\u0191\25\0\1\55\24\0\1\u0191\21\0\6\55\1\u0192"+
    "\21\55\30\0\1\u0193\27\0\1\u0193\26\0\1\55\23\0"+
    "\1\u0193\22\0\5\55\1\u0194\22\55\41\0\1\317\27\0"+
    "\1\317\15\0\1\55\34\0\1\317\11\0\16\55\1\321"+
    "\11\55\31\0\1\u0195\27\0\1\u0195\25\0\1\55\24\0"+
    "\1\u0195\21\0\6\55\1\u0196\21\55\3\0\1\130\1\237"+
    "\14\0\1\132\2\0\2\130\1\u0197\24\130\3\237\1\u0198"+
    "\24\237\3\0\1\346\1\237\14\0\1\132\2\0\2\346"+
    "\1\u0199\24\346\3\237\1\u0198\24\237\3\0\2\346\14\0"+
    "\1\132\2\0\2\346\1\u0199\27\346\1\u0199\24\346\3\0"+
    "\1\130\1\131\14\0\1\132\2\0\2\130\1\u0197\24\130"+
    "\3\40\1\u019a\24\40\3\0\1\130\1\237\14\0\1\132"+
    "\2\0\2\130\1\u019b\24\130\3\237\1\u019c\24\237\3\0"+
    "\1\346\1\237\14\0\1\132\2\0\2\346\1\u019d\24\346"+
    "\3\237\1\u019c\24\237\3\0\2\346\14\0\1\132\2\0"+
    "\2\346\1\u019d\27\346\1\u019d\24\346\3\0\1\130\1\131"+
    "\14\0\1\132\2\0\2\130\1\u019b\24\130\3\40\1\u019e"+
    "\24\40\3\0\1\130\1\237\14\0\1\132\2\0\1\u019f"+
    "\26\130\1\237\1\u01a0\26\237\3\0\1\346\1\237\14\0"+
    "\1\132\2\0\1\u01a1\26\346\1\237\1\u01a0\26\237\3\0"+
    "\2\346\14\0\1\132\2\0\1\u01a1\27\346\1\u01a1\26\346"+
    "\3\0\1\130\1\237\14\0\1\132\2\0\10\130\1\166"+
    "\16\130\11\237\1\u01a2\16\237\3\0\1\346\1\237\14\0"+
    "\1\132\2\0\10\346\1\u01a3\16\346\11\237\1\u01a2\16\237"+
    "\3\0\2\346\14\0\1\132\2\0\10\346\1\u01a3\27\346"+
    "\1\u01a3\16\346\3\0\1\130\1\131\14\0\1\132\2\0"+
    "\1\u019f\26\130\1\40\1\u01a4\26\40\3\0\1\130\1\131"+
    "\14\0\1\132\2\0\10\130\1\166\16\130\11\40\1\172"+
    "\16\40\3\0\1\130\1\237\14\0\1\132\2\0\5\130"+
    "\1\u01a5\21\130\6\237\1\u01a6\21\237\3\0\1\346\1\237"+
    "\14\0\1\132\2\0\5\346\1\u01a7\21\346\6\237\1\u01a6"+
    "\21\237\3\0\2\346\14\0\1\132\2\0\5\346\1\u01a7"+
    "\27\346\1\u01a7\21\346\3\0\1\130\1\131\14\0\1\132"+
    "\2\0\5\130\1\u01a5\21\130\6\40\1\u01a8\21\40\3\0"+
    "\1\130\1\237\14\0\1\132\2\0\4\130\1\u01a9\22\130"+
    "\5\237\1\u01aa\22\237\3\0\1\346\1\237\14\0\1\132"+
    "\2\0\4\346\1\u01ab\22\346\5\237\1\u01aa\22\237\3\0"+
    "\2\346\14\0\1\132\2\0\4\346\1\u01ab\27\346\1\u01ab"+
    "\22\346\3\0\1\130\1\131\14\0\1\132\2\0\4\130"+
    "\1\u01a9\22\130\5\40\1\u01ac\22\40\3\0\1\130\1\237"+
    "\14\0\1\132\2\0\15\130\1\356\11\130\16\237\1\357"+
    "\11\237\3\0\1\346\1\237\14\0\1\132\2\0\15\346"+
    "\1\360\11\346\16\237\1\357\11\237\3\0\2\346\14\0"+
    "\1\132\2\0\15\346\1\360\27\346\1\360\11\346\3\0"+
    "\1\130\1\131\14\0\1\132\2\0\15\130\1\356\11\130"+
    "\16\40\1\362\11\40\3\0\1\346\1\237\14\0\1\132"+
    "\2\0\14\346\1\u0133\12\346\15\237\1\255\12\237\3\0"+
    "\2\346\14\0\1\132\2\0\14\346\1\u0133\27\346\1\u0133"+
    "\12\346\3\0\1\130\1\237\14\0\1\132\2\0\5\130"+
    "\1\u01ad\21\130\6\237\1\u01ae\21\237\3\0\1\346\1\237"+
    "\14\0\1\132\2\0\5\346\1\u01af\21\346\6\237\1\u01ae"+
    "\21\237\3\0\2\346\14\0\1\132\2\0\5\346\1\u01af"+
    "\27\346\1\u01af\21\346\3\0\1\130\1\131\14\0\1\132"+
    "\2\0\5\130\1\u01ad\21\130\6\40\1\u01b0\21\40\30\0"+
    "\1\u01b1\1\u01b2\1\0\1\u01b3\1\0\1\u01b4\1\0\1\u01b5"+
    "\1\0\1\u01b6\2\0\1\u01b7\1\217\12\0\1\u01b1\1\u01b2"+
    "\1\0\1\u01b3\1\0\1\u01b4\1\0\1\u01b5\1\0\1\u01b6"+
    "\2\0\1\u01b7\1\217\11\0\1\55\23\0\1\u01b1\1\u01b2"+
    "\1\0\1\u01b3\1\0\1\u01b4\1\0\1\u01b5\1\0\1\u01b6"+
    "\2\0\1\u01b7\1\217\5\0\5\55\1\u01b8\1\u01b9\1\55"+
    "\1\u01ba\1\55\1\u01bb\1\55\1\u01bc\1\55\1\u01bd\2\55"+
    "\1\u01be\1\221\5\55\41\0\1\316\27\0\1\316\15\0"+
    "\1\55\34\0\1\316\11\0\16\55\1\320\11\55\33\0"+
    "\1\124\27\0\1\124\23\0\1\55\26\0\1\124\17\0"+
    "\10\55\1\125\17\55\30\0\1\u01bf\27\0\1\u01bf\26\0"+
    "\1\55\23\0\1\u01bf\22\0\5\55\1\u01c0\22\55\24\0"+
    "\1\233\27\0\1\233\32\0\1\55\17\0\1\233\26\0"+
    "\1\55\1\234\26\55\44\0\1\u0129\27\0\1\u0129\12\0"+
    "\1\55\37\0\1\u0129\6\0\21\55\1\u012a\6\55\3\0"+
    "\1\130\1\237\14\0\1\132\2\0\4\130\1\u01c1\1\u01c2"+
    "\1\130\1\u01c3\1\130\1\u01c4\1\130\1\u01c5\1\130\1\u01c6"+
    "\2\130\1\u01c7\1\264\5\130\5\237\1\u01c8\1\u01c9\1\237"+
    "\1\u01ca\1\237\1\u01cb\1\237\1\u01cc\1\237\1\u01cd\2\237"+
    "\1\u01ce\1\265\5\237\3\0\1\346\1\237\14\0\1\132"+
    "\2\0\4\346\1\u01cf\1\u01d0\1\346\1\u01d1\1\346\1\u01d2"+
    "\1\346\1\u01d3\1\346\1\u01d4\2\346\1\u01d5\1\u01d6\5\346"+
    "\5\237\1\u01c8\1\u01c9\1\237\1\u01ca\1\237\1\u01cb\1\237"+
    "\1\u01cc\1\237\1\u01cd\2\237\1\u01ce\1\265\5\237\3\0"+
    "\2\346\14\0\1\132\2\0\4\346\1\u01cf\1\u01d0\1\346"+
    "\1\u01d1\1\346\1\u01d2\1\346\1\u01d3\1\346\1\u01d4\2\346"+
    "\1\u01d5\1\u01d6\12\346\1\u01cf\1\u01d0\1\346\1\u01d1\1\346"+
    "\1\u01d2\1\346\1\u01d3\1\346\1\u01d4\2\346\1\u01d5\1\u01d6"+
    "\5\346\3\0\1\130\1\131\14\0\1\132\2\0\4\130"+
    "\1\u01c1\1\u01c2\1\130\1\u01c3\1\130\1\u01c4\1\130\1\u01c5"+
    "\1\130\1\u01c6\2\130\1\u01c7\1\264\5\130\5\40\1\u01d7"+
    "\1\u01d8\1\40\1\u01d9\1\40\1\u01da\1\40\1\u01db\1\40"+
    "\1\u01dc\2\40\1\u01dd\1\270\5\40\3\0\1\130\1\237"+
    "\14\0\1\132\2\0\15\130\1\353\11\130\16\237\1\354"+
    "\11\237\3\0\1\346\1\237\14\0\1\132\2\0\15\346"+
    "\1\355\11\346\16\237\1\354\11\237\3\0\2\346\14\0"+
    "\1\132\2\0\15\346\1\355\27\346\1\355\11\346\3\0"+
    "\1\130\1\131\14\0\1\132\2\0\15\130\1\353\11\130"+
    "\16\40\1\361\11\40\3\0\1\130\1\237\14\0\1\132"+
    "\2\0\7\130\1\175\17\130\10\237\1\255\17\237\3\0"+
    "\1\346\1\237\14\0\1\132\2\0\7\346\1\u0133\17\346"+
    "\10\237\1\255\17\237\3\0\2\346\14\0\1\132\2\0"+
    "\7\346\1\u0133\27\346\1\u0133\17\346\3\0\1\346\1\237"+
    "\14\0\1\132\2\0\14\346\1\u01de\12\346\15\237\1\302"+
    "\12\237\3\0\2\346\14\0\1\132\2\0\14\346\1\u01de"+
    "\27\346\1\u01de\12\346\3\0\1\130\1\131\14\0\1\132"+
    "\2\0\7\130\1\175\17\130\10\40\1\176\17\40\3\0"+
    "\1\130\1\237\14\0\1\132\2\0\4\130\1\u01df\22\130"+
    "\5\237\1\u01e0\22\237\3\0\1\346\1\237\14\0\1\132"+
    "\2\0\4\346\1\u01e1\22\346\5\237\1\u01e0\22\237\3\0"+
    "\2\346\14\0\1\132\2\0\4\346\1\u01e1\27\346\1\u01e1"+
    "\22\346\3\0\1\130\1\131\14\0\1\132\2\0\4\130"+
    "\1\u01df\22\130\5\40\1\u01e2\22\40\3\0\1\130\1\237"+
    "\14\0\1\132\2\0\1\306\26\130\1\237\1\307\26\237"+
    "\3\0\1\346\1\237\14\0\1\132\2\0\1\u014f\26\346"+
    "\1\237\1\307\26\237\3\0\2\346\14\0\1\132\2\0"+
    "\1\u014f\27\346\1\u014f\26\346\3\0\1\130\1\131\14\0"+
    "\1\132\2\0\1\306\26\130\1\40\1\310\26\40\3\0"+
    "\1\130\1\237\14\0\1\132\2\0\20\130\1\u014c\6\130"+
    "\21\237\1\u014d\6\237\3\0\1\346\1\237\14\0\1\132"+
    "\2\0\20\346\1\u014e\6\346\21\237\1\u014d\6\237\3\0"+
    "\2\346\14\0\1\132\2\0\20\346\1\u014e\27\346\1\u014e"+
    "\6\346\3\0\1\130\1\131\14\0\1\132\2\0\20\130"+
    "\1\u014c\6\130\21\40\1\u0150\6\40\24\0\1\64\4\0"+
    "\1\u01e3\22\0\1\64\4\0\1\u01e3\60\0\1\u01e4\27\0"+
    "\1\u01e4\44\0\1\u01e5\27\0\1\u01e5\53\0\1\u01e6\27\0"+
    "\1\u01e6\44\0\1\74\27\0\1\74\57\0\1\105\27\0"+
    "\1\105\53\0\1\u01e7\27\0\1\u01e7\24\0\1\55\17\0"+
    "\1\64\4\0\1\u01e3\21\0\1\55\1\66\4\55\1\u01e8"+
    "\21\55\4\0\1\55\32\0\1\u01e4\13\0\14\55\1\u01e9"+
    "\13\55\4\0\1\55\24\0\1\u01e5\21\0\6\55\1\u01ea"+
    "\21\55\4\0\1\55\25\0\1\u01e6\20\0\7\55\1\u01eb"+
    "\20\55\4\0\1\55\17\0\1\74\26\0\1\55\1\77"+
    "\26\55\4\0\1\55\24\0\1\105\21\0\6\55\1\107"+
    "\21\55\4\0\1\55\25\0\1\u01e7\20\0\7\55\1\u01ec"+
    "\20\55\31\0\1\u01ed\27\0\1\u01ed\25\0\1\55\24\0"+
    "\1\u01ed\21\0\6\55\1\u01ee\21\55\3\0\1\130\1\237"+
    "\14\0\1\132\2\0\1\135\4\130\1\u01ef\21\130\1\237"+
    "\1\u01f0\4\237\1\u01f1\21\237\3\0\1\130\1\237\14\0"+
    "\1\132\2\0\13\130\1\u01f2\13\130\14\237\1\u01f3\13\237"+
    "\3\0\1\130\1\237\14\0\1\132\2\0\5\130\1\u01f4"+
    "\21\130\6\237\1\u01f5\21\237\3\0\1\130\1\237\14\0"+
    "\1\132\2\0\6\130\1\u01f6\20\130\7\237\1\u01f7\20\237"+
    "\3\0\1\130\1\237\14\0\1\132\2\0\1\145\26\130"+
    "\1\237\1\u01f8\26\237\3\0\1\130\1\237\14\0\1\132"+
    "\2\0\5\130\1\156\21\130\6\237\1\u01f9\21\237\3\0"+
    "\1\130\1\237\14\0\1\132\2\0\6\130\1\u01fa\20\130"+
    "\7\237\1\u01fb\20\237\3\0\1\346\1\237\14\0\1\132"+
    "\2\0\1\u01fc\4\346\1\u01fd\21\346\1\237\1\u01f0\4\237"+
    "\1\u01f1\21\237\3\0\1\346\1\237\14\0\1\132\2\0"+
    "\13\346\1\u01fe\13\346\14\237\1\u01f3\13\237\3\0\1\346"+
    "\1\237\14\0\1\132\2\0\5\346\1\u01ff\21\346\6\237"+
    "\1\u01f5\21\237\3\0\1\346\1\237\14\0\1\132\2\0"+
    "\6\346\1\u0200\20\346\7\237\1\u01f7\20\237\3\0\1\346"+
    "\1\237\14\0\1\132\2\0\1\u0201\26\346\1\237\1\u01f8"+
    "\26\237\3\0\1\346\1\237\14\0\1\132\2\0\5\346"+
    "\1\u0202\21\346\6\237\1\u01f9\21\237\3\0\1\346\1\237"+
    "\14\0\1\132\2\0\6\346\1\u0203\20\346\7\237\1\u01fb"+
    "\20\237\3\0\2\346\14\0\1\132\2\0\1\u01fc\4\346"+
    "\1\u01fd\22\346\1\u01fc\4\346\1\u01fd\21\346\3\0\2\346"+
    "\14\0\1\132\2\0\13\346\1\u01fe\27\346\1\u01fe\13\346"+
    "\3\0\2\346\14\0\1\132\2\0\5\346\1\u01ff\27\346"+
    "\1\u01ff\21\346\3\0\2\346\14\0\1\132\2\0\6\346"+
    "\1\u0200\27\346\1\u0200\20\346\3\0\2\346\14\0\1\132"+
    "\2\0\1\u0201\27\346\1\u0201\26\346\3\0\2\346\14\0"+
    "\1\132\2\0\5\346\1\u0202\27\346\1\u0202\21\346\3\0"+
    "\2\346\14\0\1\132\2\0\6\346\1\u0203\27\346\1\u0203"+
    "\20\346\3\0\2\346\14\0\1\132\2\0\3\346\1\u0101"+
    "\27\346\1\u0101\23\346\3\0\1\130\1\131\14\0\1\132"+
    "\2\0\1\135\4\130\1\u01ef\21\130\1\40\1\137\4\40"+
    "\1\u0204\21\40\3\0\1\130\1\131\14\0\1\132\2\0"+
    "\13\130\1\u01f2\13\130\14\40\1\u0205\13\40\3\0\1\130"+
    "\1\131\14\0\1\132\2\0\5\130\1\u01f4\21\130\6\40"+
    "\1\u0206\21\40\3\0\1\130\1\131\14\0\1\132\2\0"+
    "\6\130\1\u01f6\20\130\7\40\1\u0207\20\40\3\0\1\130"+
    "\1\131\14\0\1\132\2\0\1\145\26\130\1\40\1\150"+
    "\26\40\3\0\1\130\1\131\14\0\1\132\2\0\5\130"+
    "\1\156\21\130\6\40\1\160\21\40\3\0\1\130\1\131"+
    "\14\0\1\132\2\0\6\130\1\u01fa\20\130\7\40\1\u0208"+
    "\20\40\3\0\2\346\14\0\1\132\2\0\15\346\1\u0110"+
    "\27\346\1\u0110\11\346\3\0\1\130\1\237\14\0\1\132"+
    "\2\0\5\130\1\u0209\21\130\6\237\1\u020a\21\237\3\0"+
    "\1\346\1\237\14\0\1\132\2\0\5\346\1\u020b\21\346"+
    "\6\237\1\u020a\21\237\3\0\2\346\14\0\1\132\2\0"+
    "\5\346\1\u020b\27\346\1\u020b\21\346\3\0\1\130\1\131"+
    "\14\0\1\132\2\0\5\130\1\u0209\21\130\6\40\1\u020c"+
    "\21\40\27\0\1\65\1\u020d\26\0\1\65\1\u020d\46\0"+
    "\1\u020e\27\0\1\u020e\66\0\1\u020f\27\0\1\u020f\50\0"+
    "\1\u0210\27\0\1\u0210\40\0\1\u0211\27\0\1\u0211\32\0"+
    "\1\55\22\0\1\65\1\u020d\22\0\4\55\1\67\1\u0212"+
    "\22\55\4\0\1\55\17\0\1\u020e\26\0\1\55\1\u0213"+
    "\26\55\4\0\1\55\33\0\1\u020f\12\0\15\55\1\u0214"+
    "\12\55\4\0\1\55\31\0\1\u0210\14\0\13\55\1\u0215"+
    "\14\55\4\0\1\55\17\0\1\u0211\26\0\1\55\1\u0216"+
    "\26\55\43\0\1\316\27\0\1\316\13\0\1\55\36\0"+
    "\1\316\7\0\20\55\1\320\7\55\3\0\1\130\1\237"+
    "\14\0\1\132\2\0\3\130\1\136\1\u0217\22\130\4\237"+
    "\1\u0218\1\u0219\22\237\3\0\1\346\1\237\14\0\1\132"+
    "\2\0\2\346\1\u021a\24\346\3\237\1\245\24\237\3\0"+
    "\1\346\1\237\14\0\1\132\2\0\3\346\1\u021b\1\u021c"+
    "\22\346\4\237\1\u0218\1\u0219\22\237\3\0\1\130\1\237"+
    "\14\0\1\132\2\0\1\u021d\26\130\1\237\1\u021e\26\237"+
    "\3\0\1\346\1\237\14\0\1\132\2\0\1\u021f\26\346"+
    "\1\237\1\u021e\26\237\3\0\1\130\1\237\14\0\1\132"+
    "\2\0\14\130\1\u0220\12\130\15\237\1\u0221\12\237\3\0"+
    "\1\346\1\237\14\0\1\132\2\0\14\346\1\u0222\12\346"+
    "\15\237\1\u0221\12\237\3\0\1\130\1\237\14\0\1\132"+
    "\2\0\12\130\1\u0223\14\130\13\237\1\u0224\14\237\3\0"+
    "\1\346\1\237\14\0\1\132\2\0\12\346\1\u0225\14\346"+
    "\13\237\1\u0224\14\237\3\0\1\346\1\237\14\0\1\132"+
    "\2\0\4\346\1\u0226\22\346\5\237\1\257\22\237\3\0"+
    "\1\346\1\237\14\0\1\132\2\0\1\u0227\26\346\1\237"+
    "\1\267\26\237\3\0\1\130\1\237\14\0\1\132\2\0"+
    "\1\u0228\26\130\1\237\1\u0229\26\237\3\0\1\346\1\237"+
    "\14\0\1\132\2\0\1\u022a\26\346\1\237\1\u0229\26\237"+
    "\3\0\2\346\14\0\1\132\2\0\2\346\1\u021a\27\346"+
    "\1\u021a\24\346\3\0\2\346\14\0\1\132\2\0\3\346"+
    "\1\u021b\1\u021c\26\346\1\u021b\1\u021c\22\346\3\0\2\346"+
    "\14\0\1\132\2\0\1\u021f\27\346\1\u021f\26\346\3\0"+
    "\2\346\14\0\1\132\2\0\14\346\1\u0222\27\346\1\u0222"+
    "\12\346\3\0\2\346\14\0\1\132\2\0\12\346\1\u0225"+
    "\27\346\1\u0225\14\346\3\0\2\346\14\0\1\132\2\0"+
    "\4\346\1\u0226\27\346\1\u0226\22\346\3\0\2\346\14\0"+
    "\1\132\2\0\1\u0227\27\346\1\u0227\26\346\3\0\2\346"+
    "\14\0\1\132\2\0\1\u022a\27\346\1\u022a\26\346\3\0"+
    "\1\130\1\131\14\0\1\132\2\0\3\130\1\136\1\u0217"+
    "\22\130\4\40\1\140\1\u022b\22\40\3\0\1\130\1\131"+
    "\14\0\1\132\2\0\1\u021d\26\130\1\40\1\u022c\26\40"+
    "\3\0\1\130\1\131\14\0\1\132\2\0\14\130\1\u0220"+
    "\12\130\15\40\1\u022d\12\40\3\0\1\130\1\131\14\0"+
    "\1\132\2\0\12\130\1\u0223\14\130\13\40\1\u022e\14\40"+
    "\3\0\1\130\1\131\14\0\1\132\2\0\1\u0228\26\130"+
    "\1\40\1\u022f\26\40\3\0\1\130\1\237\14\0\1\132"+
    "\2\0\17\130\1\353\7\130\20\237\1\354\7\237\3\0"+
    "\1\346\1\237\14\0\1\132\2\0\17\346\1\355\7\346"+
    "\20\237\1\354\7\237\3\0\2\346\14\0\1\132\2\0"+
    "\17\346\1\355\27\346\1\355\7\346\3\0\1\130\1\131"+
    "\14\0\1\132\2\0\17\130\1\353\7\130\20\40\1\361"+
    "\7\40\32\0\1\226\27\0\1\226\45\0\1\u0230\27\0"+
    "\1\u0230\74\0\1\124\27\0\1\124\33\0\1\u0231\27\0"+
    "\1\u0231\63\0\1\u0232\27\0\1\u0232\15\0\1\55\25\0"+
    "\1\226\20\0\7\55\1\231\20\55\4\0\1\55\20\0"+
    "\1\u0230\25\0\2\55\1\u0233\25\55\4\0\1\55\42\0"+
    "\1\124\3\0\24\55\1\125\3\55\4\0\1\55\23\0"+
    "\1\u0231\22\0\5\55\1\u0234\22\55\4\0\1\55\34\0"+
    "\1\u0232\11\0\16\55\1\u0235\11\55\3\0\1\130\1\237"+
    "\14\0\1\132\2\0\6\130\1\277\20\130\7\237\1\300"+
    "\20\237\3\0\1\346\1\237\14\0\1\132\2\0\13\346"+
    "\1\u0236\13\346\14\237\1\247\13\237\3\0\1\346\1\237"+
    "\14\0\1\132\2\0\6\346\1\u0237\20\346\7\237\1\300"+
    "\20\237\3\0\2\346\14\0\1\132\2\0\3\346\1\355"+
    "\27\346\1\355\23\346\3\0\2\346\14\0\1\132\2\0"+
    "\13\346\1\u0236\27\346\1\u0236\13\346\3\0\2\346\14\0"+
    "\1\132\2\0\6\346\1\u0237\27\346\1\u0237\20\346\3\0"+
    "\1\130\1\237\14\0\1\132\2\0\1\130\1\u0238\25\130"+
    "\2\237\1\u0239\25\237\3\0\1\346\1\237\14\0\1\132"+
    "\2\0\1\346\1\u023a\25\346\2\237\1\u0239\25\237\3\0"+
    "\2\346\14\0\1\132\2\0\1\346\1\u023a\27\346\1\u023a"+
    "\25\346\3\0\1\130\1\237\14\0\1\132\2\0\23\130"+
    "\1\175\3\130\24\237\1\255\3\237\3\0\1\346\1\237"+
    "\14\0\1\132\2\0\23\346\1\u0133\3\346\24\237\1\255"+
    "\3\237\3\0\2\346\14\0\1\132\2\0\23\346\1\u0133"+
    "\27\346\1\u0133\3\346\3\0\1\130\1\237\14\0\1\132"+
    "\2\0\4\130\1\u023b\22\130\5\237\1\u023c\22\237\3\0"+
    "\1\346\1\237\14\0\1\132\2\0\4\346\1\u023d\22\346"+
    "\5\237\1\u023c\22\237\3\0\2\346\14\0\1\132\2\0"+
    "\4\346\1\u023d\27\346\1\u023d\22\346\3\0\2\346\14\0"+
    "\1\132\2\0\3\346\1\371\27\346\1\371\23\346\3\0"+
    "\2\346\14\0\1\132\2\0\16\346\1\u0104\27\346\1\u0104"+
    "\10\346\3\0\1\130\1\237\14\0\1\132\2\0\15\130"+
    "\1\u023e\11\130\16\237\1\u023f\11\237\3\0\1\346\1\237"+
    "\14\0\1\132\2\0\15\346\1\u0240\11\346\16\237\1\u023f"+
    "\11\237\3\0\2\346\14\0\1\132\2\0\15\346\1\u0240"+
    "\27\346\1\u0240\11\346\3\0\1\130\1\131\14\0\1\132"+
    "\2\0\6\130\1\277\20\130\7\40\1\304\20\40\3\0"+
    "\1\130\1\131\14\0\1\132\2\0\1\130\1\u0238\25\130"+
    "\2\40\1\u0241\25\40\3\0\1\130\1\131\14\0\1\132"+
    "\2\0\23\130\1\175\3\130\24\40\1\176\3\40\3\0"+
    "\1\130\1\131\14\0\1\132\2\0\4\130\1\u023b\22\130"+
    "\5\40\1\u0242\22\40\3\0\1\130\1\131\14\0\1\132"+
    "\2\0\15\130\1\u023e\11\130\16\40\1\u0243\11\40\27\0"+
    "\1\75\27\0\1\75\54\0\1\u0244\27\0\1\u0244\47\0"+
    "\1\u0245\27\0\1\u0245\30\0\1\55\22\0\1\75\23\0"+
    "\4\55\1\100\23\55\4\0\1\55\24\0\1\u0244\21\0"+
    "\6\55\1\u0246\21\55\4\0\1\55\21\0\1\u0245\24\0"+
    "\3\55\1\u0247\24\55\3\0\2\346\14\0\1\132\2\0"+
    "\16\346\1\360\27\346\1\360\10\346\3\0\2\346\14\0"+
    "\1\132\2\0\7\346\1\360\27\346\1\360\17\346\3\0"+
    "\1\130\1\237\14\0\1\132\2\0\3\130\1\146\23\130"+
    "\4\237\1\u0185\23\237\3\0\1\346\1\237\14\0\1\132"+
    "\2\0\3\346\1\u0186\23\346\4\237\1\u0185\23\237\3\0"+
    "\2\346\14\0\1\132\2\0\3\346\1\u0186\27\346\1\u0186"+
    "\23\346\3\0\1\130\1\237\14\0\1\132\2\0\5\130"+
    "\1\u0248\21\130\6\237\1\u0249\21\237\3\0\1\346\1\237"+
    "\14\0\1\132\2\0\5\346\1\u024a\21\346\6\237\1\u0249"+
    "\21\237\3\0\2\346\14\0\1\132\2\0\5\346\1\u024a"+
    "\27\346\1\u024a\21\346\3\0\1\130\1\237\14\0\1\132"+
    "\2\0\2\130\1\u024b\24\130\3\237\1\u024c\24\237\3\0"+
    "\1\346\1\237\14\0\1\132\2\0\2\346\1\u024d\24\346"+
    "\3\237\1\u024c\24\237\3\0\2\346\14\0\1\132\2\0"+
    "\2\346\1\u024d\27\346\1\u024d\24\346\3\0\1\130\1\131"+
    "\14\0\1\132\2\0\3\130\1\146\23\130\4\40\1\151"+
    "\23\40\3\0\1\130\1\131\14\0\1\132\2\0\5\130"+
    "\1\u0248\21\130\6\40\1\u024e\21\40\3\0\1\130\1\131"+
    "\14\0\1\132\2\0\2\130\1\u024b\24\130\3\40\1\u024f"+
    "\24\40\30\0\1\u020d\27\0\1\u020d\56\0\1\u0250\27\0"+
    "\1\u0250\22\0\1\55\23\0\1\u020d\22\0\5\55\1\u0212"+
    "\22\55\4\0\1\55\27\0\1\u0250\16\0\11\55\1\u0251"+
    "\16\55\3\0\1\130\1\237\14\0\1\132\2\0\4\130"+
    "\1\u0217\22\130\5\237\1\u0219\22\237\3\0\1\346\1\237"+
    "\14\0\1\132\2\0\4\346\1\u021c\22\346\5\237\1\u0219"+
    "\22\237\3\0\2\346\14\0\1\132\2\0\4\346\1\u021c"+
    "\27\346\1\u021c\22\346\3\0\1\130\1\237\14\0\1\132"+
    "\2\0\10\130\1\u0252\16\130\11\237\1\u0253\16\237\3\0"+
    "\1\346\1\237\14\0\1\132\2\0\10\346\1\u0254\16\346"+
    "\11\237\1\u0253\16\237\3\0\2\346\14\0\1\132\2\0"+
    "\10\346\1\u0254\27\346\1\u0254\16\346\3\0\1\130\1\131"+
    "\14\0\1\132\2\0\4\130\1\u0217\22\130\5\40\1\u022b"+
    "\22\40\3\0\1\130\1\131\14\0\1\132\2\0\10\130"+
    "\1\u0252\16\130\11\40\1\u0255\16\40\31\0\1\u0256\27\0"+
    "\1\u0256\25\0\1\55\24\0\1\u0256\21\0\6\55\1\u0257"+
    "\21\55\3\0\1\130\1\237\14\0\1\132\2\0\5\130"+
    "\1\u0258\21\130\6\237\1\u0259\21\237\3\0\1\346\1\237"+
    "\14\0\1\132\2\0\5\346\1\u025a\21\346\6\237\1\u0259"+
    "\21\237\3\0\2\346\14\0\1\132\2\0\5\346\1\u025a"+
    "\27\346\1\u025a\21\346\3\0\1\130\1\131\14\0\1\132"+
    "\2\0\5\130\1\u0258\21\130\6\40\1\u025b\21\40\40\0"+
    "\1\u025c\27\0\1\u025c\16\0\1\55\33\0\1\u025c\12\0"+
    "\15\55\1\u025d\12\55\3\0\1\130\1\237\14\0\1\132"+
    "\2\0\14\130\1\u025e\12\130\15\237\1\u025f\12\237\3\0"+
    "\1\346\1\237\14\0\1\132\2\0\14\346\1\u0260\12\346"+
    "\15\237\1\u025f\12\237\3\0\2\346\14\0\1\132\2\0"+
    "\14\346\1\u0260\27\346\1\u0260\12\346\3\0\1\130\1\131"+
    "\14\0\1\132\2\0\14\130\1\u025e\12\130\15\40\1\u0261"+
    "\12\40\30\0\1\u0262\27\0\1\u0262\26\0\1\55\23\0"+
    "\1\u0262\22\0\5\55\1\u0263\22\55\3\0\1\130\1\237"+
    "\14\0\1\132\2\0\4\130\1\u0264\22\130\5\237\1\u0265"+
    "\22\237\3\0\1\346\1\237\14\0\1\132\2\0\4\346"+
    "\1\u0266\22\346\5\237\1\u0265\22\237\3\0\2\346\14\0"+
    "\1\132\2\0\4\346\1\u0266\27\346\1\u0266\22\346\3\0"+
    "\1\130\1\131\14\0\1\132\2\0\4\130\1\u0264\22\130"+
    "\5\40\1\u0267\22\40\27\0\1\u0268\27\0\1\u0268\27\0"+
    "\1\55\22\0\1\u0268\23\0\4\55\1\u0269\23\55\3\0"+
    "\1\130\1\237\14\0\1\132\2\0\3\130\1\u026a\23\130"+
    "\4\237\1\u026b\23\237\3\0\1\346\1\237\14\0\1\132"+
    "\2\0\3\346\1\u026c\23\346\4\237\1\u026b\23\237\3\0"+
    "\2\346\14\0\1\132\2\0\3\346\1\u026c\27\346\1\u026c"+
    "\23\346\3\0\1\130\1\131\14\0\1\132\2\0\3\130"+
    "\1\u026a\23\130\4\40\1\u026d\23\40\26\0\1\u026e\27\0"+
    "\1\u026e\30\0\1\55\21\0\1\u026e\24\0\3\55\1\u026f"+
    "\24\55\3\0\1\130\1\237\14\0\1\132\2\0\2\130"+
    "\1\u0270\24\130\3\237\1\u0271\24\237\3\0\1\346\1\237"+
    "\14\0\1\132\2\0\2\346\1\u0272\24\346\3\237\1\u0271"+
    "\24\237\3\0\2\346\14\0\1\132\2\0\2\346\1\u0272"+
    "\27\346\1\u0272\24\346\3\0\1\130\1\131\14\0\1\132"+
    "\2\0\2\130\1\u0270\24\130\3\40\1\u0273\24\40\24\0"+
    "\1\u0274\27\0\1\u0274\32\0\1\55\17\0\1\u0274\26\0"+
    "\1\55\1\u0275\26\55\3\0\1\130\1\237\14\0\1\132"+
    "\2\0\1\u0276\26\130\1\237\1\u0277\26\237\3\0\1\346"+
    "\1\237\14\0\1\132\2\0\1\u0278\26\346\1\237\1\u0277"+
    "\26\237\3\0\2\346\14\0\1\132\2\0\1\u0278\27\346"+
    "\1\u0278\26\346\3\0\1\130\1\131\14\0\1\132\2\0"+
    "\1\u0276\26\130\1\40\1\u0279\26\40\44\0\1\u027a\27\0"+
    "\1\u027a\12\0\1\55\37\0\1\u027a\6\0\21\55\1\u027b"+
    "\6\55\3\0\1\130\1\237\14\0\1\132\2\0\20\130"+
    "\1\u027c\6\130\21\237\1\u027d\6\237\3\0\1\346\1\237"+
    "\14\0\1\132\2\0\20\346\1\u027e\6\346\21\237\1\u027d"+
    "\6\237\3\0\2\346\14\0\1\132\2\0\20\346\1\u027e"+
    "\27\346\1\u027e\6\346\3\0\1\130\1\131\14\0\1\132"+
    "\2\0\20\130\1\u027c\6\130\21\40\1\u027f\6\40\30\0"+
    "\1\u0280\27\0\1\u0280\26\0\1\55\23\0\1\u0280\22\0"+
    "\5\55\1\u0281\22\55\3\0\1\130\1\237\14\0\1\132"+
    "\2\0\4\130\1\u0282\22\130\5\237\1\u0283\22\237\3\0"+
    "\1\346\1\237\14\0\1\132\2\0\4\346\1\u0284\22\346"+
    "\5\237\1\u0283\22\237\3\0\2\346\14\0\1\132\2\0"+
    "\4\346\1\u0284\27\346\1\u0284\22\346\3\0\1\130\1\131"+
    "\14\0\1\132\2\0\4\130\1\u0282\22\130\5\40\1\u0285"+
    "\22\40\31\0\1\u0286\27\0\1\u0286\25\0\1\55\24\0"+
    "\1\u0286\21\0\6\55\1\u0287\21\55\3\0\1\130\1\237"+
    "\14\0\1\132\2\0\5\130\1\u0288\21\130\6\237\1\u0289"+
    "\21\237\3\0\1\346\1\237\14\0\1\132\2\0\5\346"+
    "\1\u028a\21\346\6\237\1\u0289\21\237\3\0\2\346\14\0"+
    "\1\132\2\0\5\346\1\u028a\27\346\1\u028a\21\346\3\0"+
    "\1\130\1\131\14\0\1\132\2\0\5\130\1\u0288\21\130"+
    "\6\40\1\u028b\21\40\43\0\1\317\27\0\1\317\13\0"+
    "\1\55\36\0\1\317\7\0\20\55\1\321\7\55\3\0"+
    "\1\130\1\237\14\0\1\132\2\0\17\130\1\356\7\130"+
    "\20\237\1\357\7\237\3\0\1\346\1\237\14\0\1\132"+
    "\2\0\17\346\1\360\7\346\20\237\1\357\7\237\3\0"+
    "\2\346\14\0\1\132\2\0\17\346\1\360\27\346\1\360"+
    "\7\346\3\0\1\130\1\131\14\0\1\132\2\0\17\130"+
    "\1\356\7\130\20\40\1\362\7\40\2\0";

  private static int [] zzUnpackTrans() {
    int [] result = new int[42076];
    int offset = 0;
    offset = zzUnpackTrans(ZZ_TRANS_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackTrans(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      value--;
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /* error codes */
  private static final int ZZ_UNKNOWN_ERROR = 0;
  private static final int ZZ_NO_MATCH = 1;
  private static final int ZZ_PUSHBACK_2BIG = 2;

  /* error messages for the codes above */
  private static final String ZZ_ERROR_MSG[] = {
    "Unkown internal scanner error",
    "Error: could not match input",
    "Error: pushback value was too large"
  };

  /**
   * ZZ_ATTRIBUTE[aState] contains the attributes of state <code>aState</code>
   */
  private static final int [] ZZ_ATTRIBUTE = zzUnpackAttribute();

  private static final String ZZ_ATTRIBUTE_PACKED_0 =
    "\1\1\1\11\5\1\14\11\32\1\3\0\1\1\1\0"+
    "\1\1\2\0\2\1\1\0\1\1\1\0\1\1\3\0"+
    "\3\1\1\0\1\1\2\0\2\1\1\0\1\1\4\0"+
    "\4\1\1\0\1\1\1\11\1\1\1\0\3\1\1\0"+
    "\50\1\1\0\1\1\2\0\2\1\1\0\1\1\2\0"+
    "\2\1\2\0\2\1\1\0\1\1\3\0\3\1\1\0"+
    "\1\1\1\0\2\1\1\11\53\1\1\0\1\1\2\0"+
    "\2\1\1\0\1\1\2\0\2\1\2\0\2\1\1\0"+
    "\1\1\2\0\2\1\1\0\1\1\1\0\1\1\1\0"+
    "\2\1\1\0\3\1\1\0\2\1\1\0\4\1\1\0"+
    "\3\1\1\0\2\1\1\0\4\1\1\0\2\1\1\0"+
    "\4\1\1\0\3\1\1\0\2\1\1\0\4\1\1\0"+
    "\3\1\1\0\1\1\1\0\1\1\1\0\1\1\2\0"+
    "\2\1\2\0\2\1\1\0\1\1\1\0\1\1\1\0"+
    "\1\1\1\0\3\1\1\0\4\1\1\0\3\1\1\0"+
    "\2\1\1\0\4\1\1\0\2\1\1\0\4\1\1\0"+
    "\3\1\2\0\3\1\1\0\3\1\1\0\1\1\1\0"+
    "\1\1\1\0\1\1\2\0\2\1\1\0\1\1\1\0"+
    "\1\1\1\0\1\1\1\0\3\1\1\0\3\1\1\0"+
    "\3\1\1\0\2\1\1\0\4\1\1\0\3\1\1\0"+
    "\3\1\1\0\2\1\1\0\2\1\1\0\1\1\1\0"+
    "\1\1\1\0\1\1\1\0\1\1\1\0\1\1\1\0"+
    "\1\1\1\0\3\1\1\0\3\1\1\0\3\1\1\0"+
    "\1\1\1\0\3\1\1\0\3\1\1\0\3\1\1\0"+
    "\1\1\7\0\7\1\1\0\17\1\10\0\7\1\1\0"+
    "\2\1\1\0\1\1\5\0\5\1\1\0\16\1\10\0"+
    "\7\1\1\0\1\1\5\0\10\1\3\0\2\1\1\0"+
    "\2\1\1\0\2\1\3\0\2\1\1\0\5\1\3\0"+
    "\3\1\2\0\2\1\1\0\2\1\1\0\2\1\1\0"+
    "\3\1\2\0\4\1\1\0\2\1\1\0\2\1\1\0"+
    "\3\1\1\0\1\1\1\0\3\1\1\0\1\1\1\0"+
    "\3\1\1\0\1\1\1\0\3\1\1\0\1\1\1\0"+
    "\3\1\1\0\1\1\1\0\3\1\1\0\1\1\1\0"+
    "\3\1\1\0\1\1\1\0\3\1\1\0\1\1\1\0"+
    "\3\1\1\0\1\1\1\0\3\1\1\0\1\1";

  private static int [] zzUnpackAttribute() {
    int [] result = new int[651];
    int offset = 0;
    offset = zzUnpackAttribute(ZZ_ATTRIBUTE_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAttribute(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }

  /** the input device */
  private java.io.Reader zzReader;

  /** the current state of the DFA */
  private int zzState;

  /** the current lexical state */
  private int zzLexicalState = YYINITIAL;

  /** this buffer contains the current text to be matched and is
      the source of the yytext() string */
  private char zzBuffer[] = new char[ZZ_BUFFERSIZE];

  /** the textposition at the last accepting state */
  private int zzMarkedPos;

  /** the current text position in the buffer */
  private int zzCurrentPos;

  /** startRead marks the beginning of the yytext() string in the buffer */
  private int zzStartRead;

  /** endRead marks the last character in the buffer, that has been read
      from input */
  private int zzEndRead;

  /** number of newlines encountered up to the start of the matched text */
  private int yyline;

  /** the number of characters up to the start of the matched text */
  private int yychar;

  /**
   * the number of characters from the last newline up to the start of the 
   * matched text
   */
  private int yycolumn;

  /** 
   * zzAtBOL == true <=> the scanner is currently at the beginning of a line
   */
  private boolean zzAtBOL = true;

  /** zzAtEOF == true <=> the scanner is at the EOF */
  private boolean zzAtEOF;

  /** denotes if the user-EOF-code has already been executed */
  private boolean zzEOFDone;

  /* user code: */
    public String lexeme;
    public static LinkedList<TError> TablaEL = new LinkedList<TError>();



  /**
   * Creates a new scanner
   * There is also a java.io.InputStream version of this constructor.
   *
   * @param   in  the java.io.Reader to read input from.
   */
  public scanner(java.io.Reader in) {
    this.zzReader = in;
  }

  /**
   * Creates a new scanner.
   * There is also java.io.Reader version of this constructor.
   *
   * @param   in  the java.io.Inputstream to read input from.
   */
  public scanner(java.io.InputStream in) {
    this(new java.io.InputStreamReader(in));
  }

  /** 
   * Unpacks the compressed character translation table.
   *
   * @param packed   the packed character translation table
   * @return         the unpacked character translation table
   */
  private static char [] zzUnpackCMap(String packed) {
    char [] map = new char[0x10000];
    int i = 0;  /* index in packed string  */
    int j = 0;  /* index in unpacked array */
    while (i < 158) {
      int  count = packed.charAt(i++);
      char value = packed.charAt(i++);
      do map[j++] = value; while (--count > 0);
    }
    return map;
  }


  /**
   * Refills the input buffer.
   *
   * @return      <code>false</code>, iff there was new input.
   * 
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  private boolean zzRefill() throws java.io.IOException {

    /* first: make room (if you can) */
    if (zzStartRead > 0) {
      System.arraycopy(zzBuffer, zzStartRead,
                       zzBuffer, 0,
                       zzEndRead-zzStartRead);

      /* translate stored positions */
      zzEndRead-= zzStartRead;
      zzCurrentPos-= zzStartRead;
      zzMarkedPos-= zzStartRead;
      zzStartRead = 0;
    }

    /* is the buffer big enough? */
    if (zzCurrentPos >= zzBuffer.length) {
      /* if not: blow it up */
      char newBuffer[] = new char[zzCurrentPos*2];
      System.arraycopy(zzBuffer, 0, newBuffer, 0, zzBuffer.length);
      zzBuffer = newBuffer;
    }

    /* finally: fill the buffer with new input */
    int numRead = zzReader.read(zzBuffer, zzEndRead,
                                            zzBuffer.length-zzEndRead);

    if (numRead > 0) {
      zzEndRead+= numRead;
      return false;
    }
    // unlikely but not impossible: read 0 characters, but not at end of stream    
    if (numRead == 0) {
      int c = zzReader.read();
      if (c == -1) {
        return true;
      } else {
        zzBuffer[zzEndRead++] = (char) c;
        return false;
      }     
    }

	// numRead < 0
    return true;
  }

    
  /**
   * Closes the input stream.
   */
  public final void yyclose() throws java.io.IOException {
    zzAtEOF = true;            /* indicate end of file */
    zzEndRead = zzStartRead;  /* invalidate buffer    */

    if (zzReader != null)
      zzReader.close();
  }


  /**
   * Resets the scanner to read from a new input stream.
   * Does not close the old reader.
   *
   * All internal variables are reset, the old input stream 
   * <b>cannot</b> be reused (internal buffer is discarded and lost).
   * Lexical state is set to <tt>ZZ_INITIAL</tt>.
   *
   * @param reader   the new input stream 
   */
  public final void yyreset(java.io.Reader reader) {
    zzReader = reader;
    zzAtBOL  = true;
    zzAtEOF  = false;
    zzEOFDone = false;
    zzEndRead = zzStartRead = 0;
    zzCurrentPos = zzMarkedPos = 0;
    yyline = yychar = yycolumn = 0;
    zzLexicalState = YYINITIAL;
  }


  /**
   * Returns the current lexical state.
   */
  public final int yystate() {
    return zzLexicalState;
  }


  /**
   * Enters a new lexical state
   *
   * @param newState the new lexical state
   */
  public final void yybegin(int newState) {
    zzLexicalState = newState;
  }


  /**
   * Returns the text matched by the current regular expression.
   */
  public final String yytext() {
    return new String( zzBuffer, zzStartRead, zzMarkedPos-zzStartRead );
  }


  /**
   * Returns the character at position <tt>pos</tt> from the 
   * matched text. 
   * 
   * It is equivalent to yytext().charAt(pos), but faster
   *
   * @param pos the position of the character to fetch. 
   *            A value from 0 to yylength()-1.
   *
   * @return the character at position pos
   */
  public final char yycharat(int pos) {
    return zzBuffer[zzStartRead+pos];
  }


  /**
   * Returns the length of the matched text region.
   */
  public final int yylength() {
    return zzMarkedPos-zzStartRead;
  }


  /**
   * Reports an error that occured while scanning.
   *
   * In a wellformed scanner (no or only correct usage of 
   * yypushback(int) and a match-all fallback rule) this method 
   * will only be called with things that "Can't Possibly Happen".
   * If this method is called, something is seriously wrong
   * (e.g. a JFlex bug producing a faulty scanner etc.).
   *
   * Usual syntax/scanner level error handling should be done
   * in error fallback rules.
   *
   * @param   errorCode  the code of the errormessage to display
   */
  private void zzScanError(int errorCode) {
    String message;
    try {
      message = ZZ_ERROR_MSG[errorCode];
    }
    catch (ArrayIndexOutOfBoundsException e) {
      message = ZZ_ERROR_MSG[ZZ_UNKNOWN_ERROR];
    }

    throw new Error(message);
  } 


  /**
   * Pushes the specified amount of characters back into the input stream.
   *
   * They will be read again by then next call of the scanning method
   *
   * @param number  the number of characters to be read again.
   *                This number must not be greater than yylength()!
   */
  public void yypushback(int number)  {
    if ( number > yylength() )
      zzScanError(ZZ_PUSHBACK_2BIG);

    zzMarkedPos -= number;
  }


  /**
   * Contains user EOF-code, which will be executed exactly once,
   * when the end of file is reached
   */
  private void zzDoEOF() throws java.io.IOException {
    if (!zzEOFDone) {
      zzEOFDone = true;
      yyclose();
    }
  }


  /**
   * Resumes scanning until the next regular expression is matched,
   * the end of input is encountered or an I/O-Error occurs.
   *
   * @return      the next token
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  public Tokens next_token() throws java.io.IOException {
    int zzInput;
    int zzAction;

    // cached fields:
    int zzCurrentPosL;
    int zzMarkedPosL;
    int zzEndReadL = zzEndRead;
    char [] zzBufferL = zzBuffer;
    char [] zzCMapL = ZZ_CMAP;

    int [] zzTransL = ZZ_TRANS;
    int [] zzRowMapL = ZZ_ROWMAP;
    int [] zzAttrL = ZZ_ATTRIBUTE;

    while (true) {
      zzMarkedPosL = zzMarkedPos;

      yychar+= zzMarkedPosL-zzStartRead;

      boolean zzR = false;
      for (zzCurrentPosL = zzStartRead; zzCurrentPosL < zzMarkedPosL;
                                                             zzCurrentPosL++) {
        switch (zzBufferL[zzCurrentPosL]) {
        case '\u000B':
        case '\u000C':
        case '\u0085':
        case '\u2028':
        case '\u2029':
          yyline++;
          yycolumn = 0;
          zzR = false;
          break;
        case '\r':
          yyline++;
          yycolumn = 0;
          zzR = true;
          break;
        case '\n':
          if (zzR)
            zzR = false;
          else {
            yyline++;
            yycolumn = 0;
          }
          break;
        default:
          zzR = false;
          yycolumn++;
        }
      }

      if (zzR) {
        // peek one character ahead if it is \n (if we have counted one line too much)
        boolean zzPeek;
        if (zzMarkedPosL < zzEndReadL)
          zzPeek = zzBufferL[zzMarkedPosL] == '\n';
        else if (zzAtEOF)
          zzPeek = false;
        else {
          boolean eof = zzRefill();
          zzEndReadL = zzEndRead;
          zzMarkedPosL = zzMarkedPos;
          zzBufferL = zzBuffer;
          if (eof) 
            zzPeek = false;
          else 
            zzPeek = zzBufferL[zzMarkedPosL] == '\n';
        }
        if (zzPeek) yyline--;
      }
      zzAction = -1;

      zzCurrentPosL = zzCurrentPos = zzStartRead = zzMarkedPosL;
  
      zzState = ZZ_LEXSTATE[zzLexicalState];


      zzForAction: {
        while (true) {
    
          if (zzCurrentPosL < zzEndReadL)
            zzInput = zzBufferL[zzCurrentPosL++];
          else if (zzAtEOF) {
            zzInput = YYEOF;
            break zzForAction;
          }
          else {
            // store back cached positions
            zzCurrentPos  = zzCurrentPosL;
            zzMarkedPos   = zzMarkedPosL;
            boolean eof = zzRefill();
            // get translated positions and possibly new buffer
            zzCurrentPosL  = zzCurrentPos;
            zzMarkedPosL   = zzMarkedPos;
            zzBufferL      = zzBuffer;
            zzEndReadL     = zzEndRead;
            if (eof) {
              zzInput = YYEOF;
              break zzForAction;
            }
            else {
              zzInput = zzBufferL[zzCurrentPosL++];
            }
          }
          int zzNext = zzTransL[ zzRowMapL[zzState] + zzCMapL[zzInput] ];
          if (zzNext == -1) break zzForAction;
          zzState = zzNext;

          int zzAttributes = zzAttrL[zzState];
          if ( (zzAttributes & 1) == 1 ) {
            zzAction = zzState;
            zzMarkedPosL = zzCurrentPosL;
            if ( (zzAttributes & 8) == 8 ) break zzForAction;
          }

        }
      }

      // store back cached position
      zzMarkedPos = zzMarkedPosL;

      switch (zzAction < 0 ? zzAction : ZZ_ACTION[zzAction]) {
        case 17: 
          { System.out.println("Reconoció "+yytext()+" Clase");
                                               return new Symbol(Simbolos.Clase yycolumn, yyline, yytext());
          }
        case 21: break;
        case 13: 
          { System.out.println("Reconoció "+yytext()+" parentesis_abierto"); 
                    return new Symbol(Simbolos.parentesis_abierto      yycolumn, yyline, yytext());
          }
        case 22: break;
        case 4: 
          { System.out.println("Reconoció "+yytext()+" mas"); 
                    return new Symbol(Simbolos.separador               yycolumn, yyline, yytext());
          }
        case 23: break;
        case 10: 
          { System.out.println("Reconoció "+yytext()+" division"); 
                    return new Symbol(Simbolos.division                yycolumn, yyline, yytext());
          }
        case 24: break;
        case 9: 
          { System.out.println("Reconoció "+yytext()+" multiplicacion"); 
                    return new Symbol(Simbolos.multiplicacion          yycolumn, yyline, yytext());
          }
        case 25: break;
        case 7: 
          { System.out.println("Reconoció "+yytext()+" suma"); 
                    return new Symbol(Simbolos.suma                    yycolumn, yyline, yytext());
          }
        case 26: break;
        case 19: 
          { System.out.println("Reconoció "+yytext()+" reservada");
                    return new Symbol(Simbolos.reservada yycolumn, yyline, yytext());
          }
        case 27: break;
        case 8: 
          { System.out.println("Reconoció "+yytext()+" mresta"); 
                    return new Symbol(Simbolos.resta                   yycolumn, yyline, yytext());
          }
        case 28: break;
        case 15: 
          { System.out.println("Reconoció "+yytext()+" fin_linea"); 
                    return new Symbol(Simbolos.fin_linea               yycolumn, yyline, yytext());
          }
        case 29: break;
        case 18: 
          { System.out.println("Reconoció "+yytext()+" Cadena");
                                                   return new Symbol(Simbolos.Cadena yycolumn, yyline, yytext());
          }
        case 30: break;
        case 20: 
          { System.out.println("Reconoció "+yytext()+" Metodo");
                                return new Symbol(Simbolos.Metodo yycolumn, yyline, yytext());
          }
        case 31: break;
        case 11: 
          { System.out.println("Reconoció "+yytext()+" delimitador_izquierdo"); 
                    return new Symbol(Simbolos.delimitador_izquierdo   yycolumn, yyline, yytext());
          }
        case 32: break;
        case 3: 
          { System.out.println("Reconoció "+yytext()+" Numero");
                     return new Symbol(Simbolos.Numero yycolumn, yyline, yytext());
          }
        case 33: break;
        case 6: 
          { System.out.println("Reconoció "+yytext()+" asignacion"); 
                    return new Symbol(Simbolos.asignacion              yycolumn, yyline, yytext());
          }
        case 34: break;
        case 14: 
          { System.out.println("Reconoció "+yytext()+" parentesis_cerrado"); 
                    return new Symbol(Simbolos.parentesis_cerrado      yycolumn, yyline, yytext());
          }
        case 35: break;
        case 5: 
          { System.out.println("Reconoció "+yytext()+" punto"); 
                    return new Symbol(Simbolos.punto                   yycolumn, yyline, yytext());
          }
        case 36: break;
        case 2: 
          { System.out.println("Error Lexico "+yytext()+" Linea "+yyline+" Columna "+yycolumn);
    TError datos = new TError(yytext(),yyline,yycolumn,"Error Lexico","Simbolo no existe en el lenguaje");
    TablaEL.add(datos);
          }
        case 37: break;
        case 12: 
          { System.out.println("Reconoció "+yytext()+" delimitador_derecho"); 
                    return new Symbol(Simbolos.delimitador_derecho     yycolumn, yyline, yytext());
          }
        case 38: break;
        case 16: 
          { System.out.println("Reconoció "+yytext()+" Identificador");
                                        return new Symbol(Simbolos.Identificador yycolumn, yyline, yytext());
          }
        case 39: break;
        case 1: 
          { /* ignore */
          }
        case 40: break;
        default: 
          if (zzInput == YYEOF && zzStartRead == zzCurrentPos) {
            zzAtEOF = true;
            zzDoEOF();
              { return new java_cup.runtime.Symbol(Simbolos.EOF); }
          } 
          else {
            zzScanError(ZZ_NO_MATCH);
          }
      }
    }
  }


}
